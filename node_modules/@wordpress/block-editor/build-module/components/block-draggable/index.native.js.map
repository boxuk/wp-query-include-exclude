{"version":3,"names":["AccessibilityInfo","useSafeAreaInsets","useSafeAreaFrame","Animated","runOnJS","runOnUI","useAnimatedRef","useAnimatedStyle","useSharedValue","withDelay","withTiming","ZoomInEasyDown","Draggable","DraggableTrigger","select","useSelect","useDispatch","useCallback","useEffect","useRef","useState","Platform","getBlockType","generateHapticFeedback","RCTAztecView","useScrollWhenDragging","DraggableChip","store","blockEditorStore","useBlockListContext","DroppingInsertionPoint","useBlockDropZone","styles","CHIP_OFFSET_TO_TOUCH_POSITION","BLOCK_OPACITY_ANIMATION_CONFIG","duration","BLOCK_OPACITY_ANIMATION_DELAY","DEFAULT_LONG_PRESS_MIN_DURATION","DEFAULT_IOS_LONG_PRESS_MIN_DURATION","BlockDraggableWrapper","children","isRTL","draggedBlockIcon","setDraggedBlockIcon","selectBlock","startDraggingBlocks","stopDraggingBlocks","scrollRef","animatedScrollRef","left","right","width","safeAreaOffset","contentWidth","scroll","offsetY","chip","x","y","height","currentYPosition","isDragging","startScrolling","scrollOnDragOver","stopScrolling","draggingScrollHandler","scrollHandler","event","contentOffset","value","onBlockDragOverWorklet","onBlockDragEnd","onBlockDrop","targetBlockIndex","setDraggedBlockIconByClientId","clientId","blockName","getBlockName","blockIcon","icon","onStartDragging","position","stopDragging","onStopDragging","srcRootClientId","srcClientIds","type","undefined","onChipLayout","nativeEvent","layout","startDragging","id","dragPosition","updateDragging","chipDynamicStyles","chipOffset","translateX","transform","translateY","chipStyles","exitingAnimation","currentHeight","currentWidth","animations","scale","initialValues","createElement","Fragment","onDragStart","onDragOver","onDragEnd","testID","onScroll","View","onLayout","style","pointerEvents","entering","exiting","useIsScreenReaderEnabled","isScreenReaderEnabled","setIsScreenReaderEnabled","mounted","changeListener","addEventListener","enabled","then","screenReaderEnabled","remove","useIsEditingText","isEditingText","setIsEditingText","InputState","isFocused","onFocusChangeAztec","addFocusChangeListener","removeFocusChangeListener","BlockDraggable","draggingClientId","wasBeingDragged","draggingAnimation","opacity","startDraggingBlock","stopDraggingBlock","isDraggable","isBeingDragged","isBlockSelected","_select","getBlockRootClientId","getTemplateLock","isBlockBeingDragged","getSelectedBlockClientId","rootClientId","templateLock","selectedBlockClientId","current","onLongPressDraggable","blurCurrentFocusedElement","animatedWrapperStyles","wrapperStyles","canDragBlock","minDuration","ios","android","onLongPress"],"sources":["@wordpress/block-editor/src/components/block-draggable/index.native.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { AccessibilityInfo } from 'react-native';\nimport {\n\tuseSafeAreaInsets,\n\tuseSafeAreaFrame,\n} from 'react-native-safe-area-context';\nimport Animated, {\n\trunOnJS,\n\trunOnUI,\n\tuseAnimatedRef,\n\tuseAnimatedStyle,\n\tuseSharedValue,\n\twithDelay,\n\twithTiming,\n\tZoomInEasyDown,\n} from 'react-native-reanimated';\n\n/**\n * WordPress dependencies\n */\nimport { Draggable, DraggableTrigger } from '@wordpress/components';\nimport { select, useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tuseCallback,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n\tPlatform,\n} from '@wordpress/element';\nimport { getBlockType } from '@wordpress/blocks';\nimport { generateHapticFeedback } from '@wordpress/react-native-bridge';\nimport RCTAztecView from '@wordpress/react-native-aztec';\n\n/**\n * Internal dependencies\n */\nimport useScrollWhenDragging from './use-scroll-when-dragging';\nimport DraggableChip from './draggable-chip';\nimport { store as blockEditorStore } from '../../store';\nimport { useBlockListContext } from '../block-list/block-list-context';\nimport DroppingInsertionPoint from './dropping-insertion-point';\nimport useBlockDropZone from '../use-block-drop-zone';\nimport styles from './style.scss';\n\nconst CHIP_OFFSET_TO_TOUCH_POSITION = 32;\nconst BLOCK_OPACITY_ANIMATION_CONFIG = { duration: 350 };\nconst BLOCK_OPACITY_ANIMATION_DELAY = 250;\nconst DEFAULT_LONG_PRESS_MIN_DURATION = 500;\nconst DEFAULT_IOS_LONG_PRESS_MIN_DURATION =\n\tDEFAULT_LONG_PRESS_MIN_DURATION - 50;\n\n/**\n * Block draggable wrapper component\n *\n * This component handles all the interactions for dragging blocks.\n * It relies on the block list and its context for dragging, hence it\n * should be rendered between the `BlockListProvider` component and the\n * block list rendering. It also requires listening to scroll events,\n * therefore for this purpose, it returns the `onScroll` event handler\n * that should be attached to the list that renders the blocks.\n *\n *\n * @param {Object}      props          Component props.\n * @param {JSX.Element} props.children Children to be rendered.\n * @param {boolean}     props.isRTL    Check if current locale is RTL.\n *\n * @return {Function} Render function that passes `onScroll` event handler.\n */\nconst BlockDraggableWrapper = ( { children, isRTL } ) => {\n\tconst [ draggedBlockIcon, setDraggedBlockIcon ] = useState();\n\n\tconst { selectBlock, startDraggingBlocks, stopDraggingBlocks } =\n\t\tuseDispatch( blockEditorStore );\n\n\tconst { scrollRef } = useBlockListContext();\n\tconst animatedScrollRef = useAnimatedRef();\n\tconst { left, right } = useSafeAreaInsets();\n\tconst { width } = useSafeAreaFrame();\n\tconst safeAreaOffset = left + right;\n\tconst contentWidth = width - safeAreaOffset;\n\tanimatedScrollRef( scrollRef );\n\n\tconst scroll = {\n\t\toffsetY: useSharedValue( 0 ),\n\t};\n\tconst chip = {\n\t\tx: useSharedValue( 0 ),\n\t\ty: useSharedValue( 0 ),\n\t\twidth: useSharedValue( 0 ),\n\t\theight: useSharedValue( 0 ),\n\t};\n\tconst currentYPosition = useSharedValue( 0 );\n\tconst isDragging = useSharedValue( false );\n\n\tconst [\n\t\tstartScrolling,\n\t\tscrollOnDragOver,\n\t\tstopScrolling,\n\t\tdraggingScrollHandler,\n\t] = useScrollWhenDragging();\n\n\tconst scrollHandler = ( event ) => {\n\t\t'worklet';\n\t\tconst { contentOffset } = event;\n\t\tscroll.offsetY.value = contentOffset.y;\n\n\t\tdraggingScrollHandler( event );\n\t};\n\n\tconst {\n\t\tonBlockDragOverWorklet,\n\t\tonBlockDragEnd,\n\t\tonBlockDrop,\n\t\ttargetBlockIndex,\n\t} = useBlockDropZone();\n\n\t// Stop dragging blocks if the block draggable is unmounted.\n\tuseEffect( () => {\n\t\treturn () => {\n\t\t\tif ( isDragging.value ) {\n\t\t\t\tstopDraggingBlocks();\n\t\t\t}\n\t\t};\n\t}, [] );\n\n\tconst setDraggedBlockIconByClientId = ( clientId ) => {\n\t\tconst blockName = select( blockEditorStore ).getBlockName( clientId );\n\t\tconst blockIcon = getBlockType( blockName )?.icon;\n\t\tif ( blockIcon ) {\n\t\t\tsetDraggedBlockIcon( blockIcon );\n\t\t}\n\t};\n\n\tconst onStartDragging = ( { clientId, position } ) => {\n\t\tif ( clientId ) {\n\t\t\tstartDraggingBlocks( [ clientId ] );\n\t\t\tsetDraggedBlockIconByClientId( clientId );\n\t\t\trunOnUI( startScrolling )( position.y );\n\t\t\tgenerateHapticFeedback();\n\t\t} else {\n\t\t\t// We stop dragging if no block is found.\n\t\t\trunOnUI( stopDragging )();\n\t\t}\n\t};\n\n\tconst onStopDragging = ( { clientId } ) => {\n\t\tif ( clientId ) {\n\t\t\tonBlockDrop( {\n\t\t\t\t// Dropping is only allowed at root level\n\t\t\t\tsrcRootClientId: '',\n\t\t\t\tsrcClientIds: [ clientId ],\n\t\t\t\ttype: 'block',\n\t\t\t} );\n\t\t\tselectBlock( clientId );\n\t\t\tsetDraggedBlockIcon( undefined );\n\t\t}\n\t\tonBlockDragEnd();\n\t\tstopDraggingBlocks();\n\t};\n\n\tconst onChipLayout = ( { nativeEvent: { layout } } ) => {\n\t\tif ( layout.width > 0 ) {\n\t\t\tchip.width.value = layout.width;\n\t\t}\n\t\tif ( layout.height > 0 ) {\n\t\t\tchip.height.value = layout.height;\n\t\t}\n\t};\n\n\tconst startDragging = ( { x, y, id } ) => {\n\t\t'worklet';\n\t\tconst dragPosition = { x, y };\n\t\tchip.x.value = dragPosition.x;\n\t\tchip.y.value = dragPosition.y;\n\t\tcurrentYPosition.value = dragPosition.y;\n\n\t\tisDragging.value = true;\n\n\t\trunOnJS( onStartDragging )( { clientId: id, position: dragPosition } );\n\t};\n\n\tconst updateDragging = ( { x, y } ) => {\n\t\t'worklet';\n\t\tconst dragPosition = { x, y };\n\t\tchip.x.value = dragPosition.x;\n\t\tchip.y.value = dragPosition.y;\n\t\tcurrentYPosition.value = dragPosition.y;\n\n\t\tonBlockDragOverWorklet( { x, y: y + scroll.offsetY.value } );\n\n\t\t// Update scrolling velocity\n\t\tscrollOnDragOver( dragPosition.y );\n\t};\n\n\tconst stopDragging = ( { id } ) => {\n\t\t'worklet';\n\t\tisDragging.value = false;\n\n\t\tstopScrolling();\n\t\trunOnJS( onStopDragging )( { clientId: id } );\n\t};\n\n\tconst chipDynamicStyles = useAnimatedStyle( () => {\n\t\tconst chipOffset = chip.width.value / 2;\n\t\tconst translateX = ! isRTL\n\t\t\t? chip.x.value - chipOffset\n\t\t\t: -( contentWidth - ( chip.x.value + chipOffset ) );\n\n\t\treturn {\n\t\t\ttransform: [\n\t\t\t\t{\n\t\t\t\t\ttranslateX,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttranslateY:\n\t\t\t\t\t\tchip.y.value -\n\t\t\t\t\t\tchip.height.value -\n\t\t\t\t\t\tCHIP_OFFSET_TO_TOUCH_POSITION,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t} );\n\tconst chipStyles = [\n\t\tchipDynamicStyles,\n\t\tstyles[ 'draggable-chip__wrapper' ],\n\t];\n\n\tconst exitingAnimation = ( { currentHeight, currentWidth } ) => {\n\t\t'worklet';\n\t\tconst translateX = ! isRTL ? 0 : currentWidth * -1;\n\t\tconst duration = 150;\n\t\tconst animations = {\n\t\t\ttransform: [\n\t\t\t\t{\n\t\t\t\t\ttranslateY: withTiming( currentHeight, {\n\t\t\t\t\t\tduration,\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttranslateX: withTiming( translateX, {\n\t\t\t\t\t\tduration,\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{ scale: withTiming( 0, { duration } ) },\n\t\t\t],\n\t\t};\n\t\tconst initialValues = {\n\t\t\ttransform: [ { translateY: 0 }, { translateX }, { scale: 1 } ],\n\t\t};\n\t\treturn {\n\t\t\tinitialValues,\n\t\t\tanimations,\n\t\t};\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<DroppingInsertionPoint\n\t\t\t\tscroll={ scroll }\n\t\t\t\tcurrentYPosition={ currentYPosition }\n\t\t\t\tisDragging={ isDragging }\n\t\t\t\ttargetBlockIndex={ targetBlockIndex }\n\t\t\t/>\n\t\t\t<Draggable\n\t\t\t\tonDragStart={ startDragging }\n\t\t\t\tonDragOver={ updateDragging }\n\t\t\t\tonDragEnd={ stopDragging }\n\t\t\t\ttestID=\"block-draggable-wrapper\"\n\t\t\t>\n\t\t\t\t{ children( { onScroll: scrollHandler } ) }\n\t\t\t</Draggable>\n\t\t\t<Animated.View\n\t\t\t\tonLayout={ onChipLayout }\n\t\t\t\tstyle={ chipStyles }\n\t\t\t\tpointerEvents=\"none\"\n\t\t\t>\n\t\t\t\t{ draggedBlockIcon && (\n\t\t\t\t\t<Animated.View\n\t\t\t\t\t\tentering={ ZoomInEasyDown.duration( 200 ) }\n\t\t\t\t\t\texiting={ exitingAnimation }\n\t\t\t\t\t>\n\t\t\t\t\t\t<DraggableChip icon={ draggedBlockIcon } />\n\t\t\t\t\t</Animated.View>\n\t\t\t\t) }\n\t\t\t</Animated.View>\n\t\t</>\n\t);\n};\n\nfunction useIsScreenReaderEnabled() {\n\tconst [ isScreenReaderEnabled, setIsScreenReaderEnabled ] =\n\t\tuseState( false );\n\n\tuseEffect( () => {\n\t\tlet mounted = true;\n\n\t\tconst changeListener = AccessibilityInfo.addEventListener(\n\t\t\t'screenReaderChanged',\n\t\t\t( enabled ) => setIsScreenReaderEnabled( enabled )\n\t\t);\n\n\t\tAccessibilityInfo.isScreenReaderEnabled().then(\n\t\t\t( screenReaderEnabled ) => {\n\t\t\t\tif ( mounted && screenReaderEnabled ) {\n\t\t\t\t\tsetIsScreenReaderEnabled( screenReaderEnabled );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\treturn () => {\n\t\t\tmounted = false;\n\n\t\t\tchangeListener.remove();\n\t\t};\n\t}, [] );\n\n\treturn isScreenReaderEnabled;\n}\n\nfunction useIsEditingText() {\n\tconst [ isEditingText, setIsEditingText ] = useState( () =>\n\t\tRCTAztecView.InputState.isFocused()\n\t);\n\n\tuseEffect( () => {\n\t\tconst onFocusChangeAztec = ( { isFocused } ) => {\n\t\t\tsetIsEditingText( isFocused );\n\t\t};\n\n\t\tRCTAztecView.InputState.addFocusChangeListener( onFocusChangeAztec );\n\n\t\treturn () => {\n\t\t\tRCTAztecView.InputState.removeFocusChangeListener(\n\t\t\t\tonFocusChangeAztec\n\t\t\t);\n\t\t};\n\t}, [] );\n\n\treturn isEditingText;\n}\n\n/**\n * Block draggable component\n *\n * This component serves for animating the block when it is being dragged.\n * Hence, it should be wrapped around the rendering of a block.\n *\n * @param {Object}      props                    Component props.\n * @param {JSX.Element} props.children           Children to be rendered.\n * @param {string}      props.clientId           Client id of the block.\n * @param {string}      [props.draggingClientId] Client id to use for dragging. If not defined, the value from `clientId` will be used.\n * @param {boolean}     [props.enabled]          Enables the draggable trigger.\n * @param {string}      [props.testID]           Id used for querying the long-press gesture handler in tests.\n *\n * @return {Function} Render function which includes the parameter `isDraggable` to determine if the block can be dragged.\n */\nconst BlockDraggable = ( {\n\tclientId,\n\tchildren,\n\tdraggingClientId,\n\tenabled = true,\n\ttestID,\n} ) => {\n\tconst wasBeingDragged = useRef( false );\n\tconst isEditingText = useIsEditingText();\n\tconst isScreenReaderEnabled = useIsScreenReaderEnabled();\n\n\tconst draggingAnimation = {\n\t\topacity: useSharedValue( 1 ),\n\t};\n\n\tconst startDraggingBlock = () => {\n\t\tdraggingAnimation.opacity.value = withTiming(\n\t\t\t0.4,\n\t\t\tBLOCK_OPACITY_ANIMATION_CONFIG\n\t\t);\n\t};\n\n\tconst stopDraggingBlock = () => {\n\t\tdraggingAnimation.opacity.value = withDelay(\n\t\t\tBLOCK_OPACITY_ANIMATION_DELAY,\n\t\t\twithTiming( 1, BLOCK_OPACITY_ANIMATION_CONFIG )\n\t\t);\n\t};\n\n\tconst { isDraggable, isBeingDragged, isBlockSelected } = useSelect(\n\t\t( _select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetTemplateLock,\n\t\t\t\tisBlockBeingDragged,\n\t\t\t\tgetSelectedBlockClientId,\n\t\t\t} = _select( blockEditorStore );\n\t\t\tconst rootClientId = getBlockRootClientId( clientId );\n\t\t\tconst templateLock = rootClientId\n\t\t\t\t? getTemplateLock( rootClientId )\n\t\t\t\t: null;\n\t\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\n\t\t\treturn {\n\t\t\t\tisBeingDragged: isBlockBeingDragged( clientId ),\n\t\t\t\tisDraggable: 'all' !== templateLock,\n\t\t\t\tisBlockSelected:\n\t\t\t\t\tselectedBlockClientId && selectedBlockClientId === clientId,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tuseEffect( () => {\n\t\tif ( isBeingDragged !== wasBeingDragged.current ) {\n\t\t\tif ( isBeingDragged ) {\n\t\t\t\tstartDraggingBlock();\n\t\t\t} else {\n\t\t\t\tstopDraggingBlock();\n\t\t\t}\n\t\t}\n\t\twasBeingDragged.current = isBeingDragged;\n\t}, [ isBeingDragged ] );\n\n\tconst onLongPressDraggable = useCallback( () => {\n\t\t// Ensure that no text input is focused when starting the dragging gesture in order to prevent conflicts with text editing.\n\t\tRCTAztecView.InputState.blurCurrentFocusedElement();\n\t}, [] );\n\n\tconst animatedWrapperStyles = useAnimatedStyle( () => {\n\t\treturn {\n\t\t\topacity: draggingAnimation.opacity.value,\n\t\t};\n\t} );\n\tconst wrapperStyles = [\n\t\tanimatedWrapperStyles,\n\t\tstyles[ 'draggable-wrapper__container' ],\n\t];\n\n\tconst canDragBlock =\n\t\tenabled &&\n\t\t! isScreenReaderEnabled &&\n\t\t( ! isBlockSelected || ! isEditingText );\n\n\tif ( ! isDraggable ) {\n\t\treturn children( { isDraggable: false } );\n\t}\n\n\treturn (\n\t\t<DraggableTrigger\n\t\t\tid={ draggingClientId || clientId }\n\t\t\tenabled={ enabled && canDragBlock }\n\t\t\tminDuration={ Platform.select( {\n\t\t\t\t// On iOS, using a lower min duration than the default\n\t\t\t\t// value prevents the long-press gesture from being\n\t\t\t\t// triggered in underneath elements. This is required to\n\t\t\t\t// prevent enabling text editing when dragging is available.\n\t\t\t\tios: canDragBlock\n\t\t\t\t\t? DEFAULT_IOS_LONG_PRESS_MIN_DURATION\n\t\t\t\t\t: DEFAULT_LONG_PRESS_MIN_DURATION,\n\t\t\t\tandroid: DEFAULT_LONG_PRESS_MIN_DURATION,\n\t\t\t} ) }\n\t\t\tonLongPress={ onLongPressDraggable }\n\t\t\ttestID={ testID }\n\t\t>\n\t\t\t<Animated.View style={ wrapperStyles }>\n\t\t\t\t{ children( { isDraggable: true } ) }\n\t\t\t</Animated.View>\n\t\t</DraggableTrigger>\n\t);\n};\n\nexport { BlockDraggableWrapper };\nexport default BlockDraggable;\n"],"mappings":"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"}