{"version":3,"names":["__experimentalBorderBoxControl","BorderBoxControl","__experimentalHasSplitBorders","hasSplitBorders","__experimentalIsDefinedBorder","isDefinedBorder","__experimentalToolsPanel","ToolsPanel","__experimentalToolsPanelItem","ToolsPanelItem","useCallback","useMemo","__","BorderRadiusControl","useColorsPerOrigin","getValueFromVariable","useHasBorderPanel","settings","controls","useHasBorderColorControl","useHasBorderRadiusControl","useHasBorderStyleControl","useHasBorderWidthControl","some","Boolean","border","color","radius","style","width","BorderToolsPanel","resetAllFilter","onChange","value","panelId","children","resetAll","updatedValue","createElement","label","DEFAULT_CONTROLS","BorderPanel","as","Wrapper","inheritedValue","defaultControls","colors","decodeValue","rawValue","encodeColorValue","colorValue","allColors","flatMap","originColors","colorObject","find","slug","decodeColorValue","borderValue","forEach","side","undefined","setBorder","newBorder","showBorderColor","showBorderStyle","showBorderWidth","showBorderRadius","borderRadiusValues","setBorderRadius","newBorderRadius","hasBorderRadius","borderValues","Object","entries","resetBorder","onBorderChange","updatedBorder","previousValue","showBorderByDefault","hasValue","onDeselect","isShownByDefault","enableAlpha","enableStyle","popoverOffset","popoverPlacement","__experimentalIsRenderedInSidebar","size","values","newValue"],"sources":["@wordpress/block-editor/src/components/global-styles/border-panel.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\t__experimentalBorderBoxControl as BorderBoxControl,\n\t__experimentalHasSplitBorders as hasSplitBorders,\n\t__experimentalIsDefinedBorder as isDefinedBorder,\n\t__experimentalToolsPanel as ToolsPanel,\n\t__experimentalToolsPanelItem as ToolsPanelItem,\n} from '@wordpress/components';\nimport { useCallback, useMemo } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport BorderRadiusControl from '../border-radius-control';\nimport { useColorsPerOrigin } from './hooks';\nimport { getValueFromVariable } from './utils';\n\nexport function useHasBorderPanel( settings ) {\n\tconst controls = [\n\t\tuseHasBorderColorControl( settings ),\n\t\tuseHasBorderRadiusControl( settings ),\n\t\tuseHasBorderStyleControl( settings ),\n\t\tuseHasBorderWidthControl( settings ),\n\t];\n\n\treturn controls.some( Boolean );\n}\n\nfunction useHasBorderColorControl( settings ) {\n\treturn settings?.border?.color;\n}\n\nfunction useHasBorderRadiusControl( settings ) {\n\treturn settings?.border?.radius;\n}\n\nfunction useHasBorderStyleControl( settings ) {\n\treturn settings?.border?.style;\n}\n\nfunction useHasBorderWidthControl( settings ) {\n\treturn settings?.border?.width;\n}\n\nfunction BorderToolsPanel( {\n\tresetAllFilter,\n\tonChange,\n\tvalue,\n\tpanelId,\n\tchildren,\n} ) {\n\tconst resetAll = () => {\n\t\tconst updatedValue = resetAllFilter( value );\n\t\tonChange( updatedValue );\n\t};\n\n\treturn (\n\t\t<ToolsPanel\n\t\t\tlabel={ __( 'Border' ) }\n\t\t\tresetAll={ resetAll }\n\t\t\tpanelId={ panelId }\n\t\t>\n\t\t\t{ children }\n\t\t</ToolsPanel>\n\t);\n}\n\nconst DEFAULT_CONTROLS = {\n\tradius: true,\n\tcolor: true,\n\twidth: true,\n};\n\nexport default function BorderPanel( {\n\tas: Wrapper = BorderToolsPanel,\n\tvalue,\n\tonChange,\n\tinheritedValue = value,\n\tsettings,\n\tpanelId,\n\tdefaultControls = DEFAULT_CONTROLS,\n} ) {\n\tconst colors = useColorsPerOrigin( settings );\n\tconst decodeValue = ( rawValue ) =>\n\t\tgetValueFromVariable( { settings }, '', rawValue );\n\tconst encodeColorValue = ( colorValue ) => {\n\t\tconst allColors = colors.flatMap(\n\t\t\t( { colors: originColors } ) => originColors\n\t\t);\n\t\tconst colorObject = allColors.find(\n\t\t\t( { color } ) => color === colorValue\n\t\t);\n\t\treturn colorObject\n\t\t\t? 'var:preset|color|' + colorObject.slug\n\t\t\t: colorValue;\n\t};\n\tconst decodeColorValue = useCallback(\n\t\t( colorValue ) => {\n\t\t\tconst allColors = colors.flatMap(\n\t\t\t\t( { colors: originColors } ) => originColors\n\t\t\t);\n\t\t\tconst colorObject = allColors.find(\n\t\t\t\t( { slug } ) => colorValue === 'var:preset|color|' + slug\n\t\t\t);\n\t\t\treturn colorObject ? colorObject.color : colorValue;\n\t\t},\n\t\t[ colors ]\n\t);\n\tconst border = useMemo( () => {\n\t\tif ( hasSplitBorders( inheritedValue?.border ) ) {\n\t\t\tconst borderValue = { ...inheritedValue?.border };\n\t\t\t[ 'top', 'right', 'bottom', 'left' ].forEach( ( side ) => {\n\t\t\t\tborderValue[ side ] = {\n\t\t\t\t\t...borderValue[ side ],\n\t\t\t\t\tcolor: decodeColorValue( borderValue[ side ]?.color ),\n\t\t\t\t};\n\t\t\t} );\n\t\t\treturn borderValue;\n\t\t}\n\t\treturn {\n\t\t\t...inheritedValue?.border,\n\t\t\tcolor: inheritedValue?.border?.color\n\t\t\t\t? decodeColorValue( inheritedValue?.border?.color )\n\t\t\t\t: undefined,\n\t\t};\n\t}, [ inheritedValue?.border, decodeColorValue ] );\n\tconst setBorder = ( newBorder ) =>\n\t\tonChange( { ...value, border: newBorder } );\n\tconst showBorderColor = useHasBorderColorControl( settings );\n\tconst showBorderStyle = useHasBorderStyleControl( settings );\n\tconst showBorderWidth = useHasBorderWidthControl( settings );\n\n\t// Border radius.\n\tconst showBorderRadius = useHasBorderRadiusControl( settings );\n\tconst borderRadiusValues = decodeValue( border?.radius );\n\tconst setBorderRadius = ( newBorderRadius ) =>\n\t\tsetBorder( { ...border, radius: newBorderRadius } );\n\tconst hasBorderRadius = () => {\n\t\tconst borderValues = value?.border?.radius;\n\t\tif ( typeof borderValues === 'object' ) {\n\t\t\treturn Object.entries( borderValues ).some( Boolean );\n\t\t}\n\t\treturn !! borderValues;\n\t};\n\n\tconst resetBorder = () => {\n\t\tif ( hasBorderRadius() ) {\n\t\t\treturn setBorder( { radius: value?.border?.radius } );\n\t\t}\n\n\t\tsetBorder( undefined );\n\t};\n\n\tconst onBorderChange = ( newBorder ) => {\n\t\t// Ensure we have a visible border style when a border width or\n\t\t// color is being selected.\n\t\tconst updatedBorder = { ...newBorder };\n\n\t\tif ( hasSplitBorders( updatedBorder ) ) {\n\t\t\t[ 'top', 'right', 'bottom', 'left' ].forEach( ( side ) => {\n\t\t\t\tif ( updatedBorder[ side ] ) {\n\t\t\t\t\tupdatedBorder[ side ] = {\n\t\t\t\t\t\t...updatedBorder[ side ],\n\t\t\t\t\t\tcolor: encodeColorValue( updatedBorder[ side ]?.color ),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} );\n\t\t} else if ( updatedBorder ) {\n\t\t\tupdatedBorder.color = encodeColorValue( updatedBorder.color );\n\t\t}\n\n\t\t// As radius is maintained separately to color, style, and width\n\t\t// maintain its value. Undefined values here will be cleaned when\n\t\t// global styles are saved.\n\t\tsetBorder( { radius: border?.radius, ...updatedBorder } );\n\t};\n\n\tconst resetAllFilter = useCallback( ( previousValue ) => {\n\t\treturn {\n\t\t\t...previousValue,\n\t\t\tborder: undefined,\n\t\t};\n\t}, [] );\n\n\tconst showBorderByDefault =\n\t\tdefaultControls?.color || defaultControls?.width;\n\n\treturn (\n\t\t<Wrapper\n\t\t\tresetAllFilter={ resetAllFilter }\n\t\t\tvalue={ value }\n\t\t\tonChange={ onChange }\n\t\t\tpanelId={ panelId }\n\t\t>\n\t\t\t{ ( showBorderWidth || showBorderColor ) && (\n\t\t\t\t<ToolsPanelItem\n\t\t\t\t\thasValue={ () => isDefinedBorder( value?.border ) }\n\t\t\t\t\tlabel={ __( 'Border' ) }\n\t\t\t\t\tonDeselect={ () => resetBorder() }\n\t\t\t\t\tisShownByDefault={ showBorderByDefault }\n\t\t\t\t\tpanelId={ panelId }\n\t\t\t\t>\n\t\t\t\t\t<BorderBoxControl\n\t\t\t\t\t\tcolors={ colors }\n\t\t\t\t\t\tenableAlpha={ true }\n\t\t\t\t\t\tenableStyle={ showBorderStyle }\n\t\t\t\t\t\tonChange={ onBorderChange }\n\t\t\t\t\t\tpopoverOffset={ 40 }\n\t\t\t\t\t\tpopoverPlacement=\"left-start\"\n\t\t\t\t\t\tvalue={ border }\n\t\t\t\t\t\t__experimentalIsRenderedInSidebar={ true }\n\t\t\t\t\t\tsize={ '__unstable-large' }\n\t\t\t\t\t/>\n\t\t\t\t</ToolsPanelItem>\n\t\t\t) }\n\t\t\t{ showBorderRadius && (\n\t\t\t\t<ToolsPanelItem\n\t\t\t\t\thasValue={ hasBorderRadius }\n\t\t\t\t\tlabel={ __( 'Radius' ) }\n\t\t\t\t\tonDeselect={ () => setBorderRadius( undefined ) }\n\t\t\t\t\tisShownByDefault={ defaultControls.radius }\n\t\t\t\t\tpanelId={ panelId }\n\t\t\t\t>\n\t\t\t\t\t<BorderRadiusControl\n\t\t\t\t\t\tvalues={ borderRadiusValues }\n\t\t\t\t\t\tonChange={ ( newValue ) => {\n\t\t\t\t\t\t\tsetBorderRadius( newValue || undefined );\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t</ToolsPanelItem>\n\t\t\t) }\n\t\t</Wrapper>\n\t);\n}\n"],"mappings":"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"}