{"version":3,"names":["_hooks","require","_blocks","META_ATTRIBUTE_NAME","hasBlockMetadataSupport","blockType","feature","name","startsWith","support","getBlockSupport","addMetaAttribute","blockTypeSettings","attributes","type","supportsBlockNaming","addSaveProps","extraProps","addFilter"],"sources":["@wordpress/block-editor/src/hooks/metadata.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { getBlockSupport } from '@wordpress/blocks';\n\nconst META_ATTRIBUTE_NAME = 'metadata';\n\nexport function hasBlockMetadataSupport( blockType, feature = '' ) {\n\t// Only core blocks are allowed to use __experimentalMetadata until the fetaure is stablised.\n\tif ( ! blockType.name.startsWith( 'core/' ) ) {\n\t\treturn false;\n\t}\n\tconst support = getBlockSupport( blockType, '__experimentalMetadata' );\n\treturn !! ( true === support || support?.[ feature ] );\n}\n\n/**\n * Filters registered block settings, extending attributes to include `metadata`.\n *\n * see: https://github.com/WordPress/gutenberg/pull/40393/files#r864632012\n *\n * @param {Object} blockTypeSettings Original block settings.\n * @return {Object} Filtered block settings.\n */\nexport function addMetaAttribute( blockTypeSettings ) {\n\t// Allow blocks to specify their own attribute definition with default values if needed.\n\tif ( blockTypeSettings?.attributes?.[ META_ATTRIBUTE_NAME ]?.type ) {\n\t\treturn blockTypeSettings;\n\t}\n\n\tconst supportsBlockNaming = hasBlockMetadataSupport(\n\t\tblockTypeSettings,\n\t\t'name'\n\t);\n\n\tif ( supportsBlockNaming ) {\n\t\tblockTypeSettings.attributes = {\n\t\t\t...blockTypeSettings.attributes,\n\t\t\t[ META_ATTRIBUTE_NAME ]: {\n\t\t\t\ttype: 'object',\n\t\t\t},\n\t\t};\n\t}\n\n\treturn blockTypeSettings;\n}\n\nexport function addSaveProps( extraProps, blockType, attributes ) {\n\tif ( hasBlockMetadataSupport( blockType ) ) {\n\t\textraProps[ META_ATTRIBUTE_NAME ] = attributes[ META_ATTRIBUTE_NAME ];\n\t}\n\n\treturn extraProps;\n}\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/metadata/addMetaAttribute',\n\taddMetaAttribute\n);\n\naddFilter(\n\t'blocks.getSaveContent.extraProps',\n\t'core/metadata/save-props',\n\taddSaveProps\n);\n"],"mappings":";;;;;;;;AAGA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAJA;AACA;AACA;;AAIA,MAAME,mBAAmB,GAAG,UAAU;AAE/B,SAASC,uBAAuBA,CAAEC,SAAS,EAAEC,OAAO,GAAG,EAAE,EAAG;EAClE;EACA,IAAK,CAAED,SAAS,CAACE,IAAI,CAACC,UAAU,CAAE,OAAQ,CAAC,EAAG;IAC7C,OAAO,KAAK;EACb;EACA,MAAMC,OAAO,GAAG,IAAAC,uBAAe,EAAEL,SAAS,EAAE,wBAAyB,CAAC;EACtE,OAAO,CAAC,EAAI,IAAI,KAAKI,OAAO,IAAIA,OAAO,GAAIH,OAAO,CAAE,CAAE;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,gBAAgBA,CAAEC,iBAAiB,EAAG;EACrD;EACA,IAAKA,iBAAiB,EAAEC,UAAU,GAAIV,mBAAmB,CAAE,EAAEW,IAAI,EAAG;IACnE,OAAOF,iBAAiB;EACzB;EAEA,MAAMG,mBAAmB,GAAGX,uBAAuB,CAClDQ,iBAAiB,EACjB,MACD,CAAC;EAED,IAAKG,mBAAmB,EAAG;IAC1BH,iBAAiB,CAACC,UAAU,GAAG;MAC9B,GAAGD,iBAAiB,CAACC,UAAU;MAC/B,CAAEV,mBAAmB,GAAI;QACxBW,IAAI,EAAE;MACP;IACD,CAAC;EACF;EAEA,OAAOF,iBAAiB;AACzB;AAEO,SAASI,YAAYA,CAAEC,UAAU,EAAEZ,SAAS,EAAEQ,UAAU,EAAG;EACjE,IAAKT,uBAAuB,CAAEC,SAAU,CAAC,EAAG;IAC3CY,UAAU,CAAEd,mBAAmB,CAAE,GAAGU,UAAU,CAAEV,mBAAmB,CAAE;EACtE;EAEA,OAAOc,UAAU;AAClB;AAEA,IAAAC,gBAAS,EACR,0BAA0B,EAC1B,gCAAgC,EAChCP,gBACD,CAAC;AAED,IAAAO,gBAAS,EACR,kCAAkC,EAClC,0BAA0B,EAC1BF,YACD,CAAC"}