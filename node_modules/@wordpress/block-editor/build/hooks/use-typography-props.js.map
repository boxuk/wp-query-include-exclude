{"version":3,"names":["_classnames","_interopRequireDefault","require","_style","_fontSizes","_typographyUtils","_object","getTypographyClassesAndStyles","attributes","settings","typographyStyles","style","typography","fluidTypographySettings","getFluidTypographyOptionsFromSettings","fontSize","getTypographyFontSizeValue","size","getInlineStyles","fontFamilyClassName","fontFamily","kebabCase","className","classnames","getFontSizeClass"],"sources":["@wordpress/block-editor/src/hooks/use-typography-props.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * Internal dependencies\n */\nimport { getInlineStyles } from './style';\nimport { getFontSizeClass } from '../components/font-sizes';\nimport {\n\tgetTypographyFontSizeValue,\n\tgetFluidTypographyOptionsFromSettings,\n} from '../components/global-styles/typography-utils';\nimport { kebabCase } from '../utils/object';\n\n/*\n * This utility is intended to assist where the serialization of the typography\n * block support is being skipped for a block but the typography related CSS\n * styles still need to be generated so they can be applied to inner elements.\n */\n/**\n * Provides the CSS class names and inline styles for a block's typography support\n * attributes.\n *\n * @param {Object}         attributes Block attributes.\n * @param {Object|boolean} settings   Merged theme.json settings\n *\n * @return {Object} Typography block support derived CSS classes & styles.\n */\nexport function getTypographyClassesAndStyles( attributes, settings ) {\n\tlet typographyStyles = attributes?.style?.typography || {};\n\tconst fluidTypographySettings =\n\t\tgetFluidTypographyOptionsFromSettings( settings );\n\n\ttypographyStyles = {\n\t\t...typographyStyles,\n\t\tfontSize: getTypographyFontSizeValue(\n\t\t\t{ size: attributes?.style?.typography?.fontSize },\n\t\t\tfluidTypographySettings\n\t\t),\n\t};\n\n\tconst style = getInlineStyles( { typography: typographyStyles } );\n\tconst fontFamilyClassName = !! attributes?.fontFamily\n\t\t? `has-${ kebabCase( attributes.fontFamily ) }-font-family`\n\t\t: '';\n\n\tconst className = classnames(\n\t\tfontFamilyClassName,\n\t\tgetFontSizeClass( attributes?.fontSize )\n\t);\n\n\treturn {\n\t\tclassName,\n\t\tstyle,\n\t};\n}\n"],"mappings":";;;;;;;AAGA,IAAAA,WAAA,GAAAC,sBAAA,CAAAC,OAAA;AAKA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,UAAA,GAAAF,OAAA;AACA,IAAAG,gBAAA,GAAAH,OAAA;AAIA,IAAAI,OAAA,GAAAJ,OAAA;AAdA;AACA;AACA;;AAGA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,6BAA6BA,CAAEC,UAAU,EAAEC,QAAQ,EAAG;EACrE,IAAIC,gBAAgB,GAAGF,UAAU,EAAEG,KAAK,EAAEC,UAAU,IAAI,CAAC,CAAC;EAC1D,MAAMC,uBAAuB,GAC5B,IAAAC,sDAAqC,EAAEL,QAAS,CAAC;EAElDC,gBAAgB,GAAG;IAClB,GAAGA,gBAAgB;IACnBK,QAAQ,EAAE,IAAAC,2CAA0B,EACnC;MAAEC,IAAI,EAAET,UAAU,EAAEG,KAAK,EAAEC,UAAU,EAAEG;IAAS,CAAC,EACjDF,uBACD;EACD,CAAC;EAED,MAAMF,KAAK,GAAG,IAAAO,sBAAe,EAAE;IAAEN,UAAU,EAAEF;EAAiB,CAAE,CAAC;EACjE,MAAMS,mBAAmB,GAAG,CAAC,CAAEX,UAAU,EAAEY,UAAU,GACjD,OAAO,IAAAC,iBAAS,EAAEb,UAAU,CAACY,UAAW,CAAG,cAAa,GACzD,EAAE;EAEL,MAAME,SAAS,GAAG,IAAAC,mBAAU,EAC3BJ,mBAAmB,EACnB,IAAAK,2BAAgB,EAAEhB,UAAU,EAAEO,QAAS,CACxC,CAAC;EAED,OAAO;IACNO,SAAS;IACTX;EACD,CAAC;AACF"}