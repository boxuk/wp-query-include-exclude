{"version":3,"names":["_data","require","_element","_compose","_i18n","_blocks","_useOnBlockDrop","_interopRequireDefault","_math","_store","getDropTargetPosition","blocksData","position","orientation","allowedEdges","isRightToLeft","isRTL","nearestIndex","insertPosition","minDistance","Infinity","forEach","isUnmodifiedDefaultBlock","getBoundingClientRect","blockIndex","rect","distance","edge","getDistanceToNearestEdge","isPointContainedByRect","adjacentIndex","isNearestBlockUnmodifiedDefaultBlock","isAdjacentBlockUnmodifiedDefaultBlock","insertionIndex","useBlockDropZone","rootClientId","targetRootClientId","registry","useRegistry","dropTarget","setDropTarget","useState","index","operation","isDisabled","useSelect","select","__unstableIsWithinBlockOverlay","__unstableHasActiveBlockOverlayActive","getBlockEditingMode","blockEditorStore","blockEditingMode","getBlockListSettings","getBlocks","getBlockIndex","showInsertionPoint","hideInsertionPoint","useDispatch","onBlockDrop","useOnBlockDrop","throttled","useThrottle","useCallback","event","ownerDocument","blocks","length","batch","map","block","clientId","getIsUnmodifiedDefaultBlock","getElementById","targetIndex","x","clientX","y","clientY","useDropZone","onDrop","onDragOver","currentTarget","onDragLeave","cancel","onDragEnd"],"sources":["@wordpress/block-editor/src/components/use-block-drop-zone/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect, useRegistry } from '@wordpress/data';\nimport { useCallback, useState } from '@wordpress/element';\nimport {\n\tuseThrottle,\n\t__experimentalUseDropZone as useDropZone,\n} from '@wordpress/compose';\nimport { isRTL } from '@wordpress/i18n';\nimport { isUnmodifiedDefaultBlock as getIsUnmodifiedDefaultBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport useOnBlockDrop from '../use-on-block-drop';\nimport {\n\tgetDistanceToNearestEdge,\n\tisPointContainedByRect,\n} from '../../utils/math';\nimport { store as blockEditorStore } from '../../store';\n\n/** @typedef {import('../../utils/math').WPPoint} WPPoint */\n/** @typedef {import('../use-on-block-drop/types').WPDropOperation} WPDropOperation */\n\n/**\n * The orientation of a block list.\n *\n * @typedef {'horizontal'|'vertical'|undefined} WPBlockListOrientation\n */\n\n/**\n * The insert position when dropping a block.\n *\n * @typedef {'before'|'after'} WPInsertPosition\n */\n\n/**\n * @typedef {Object} WPBlockData\n * @property {boolean}       isUnmodifiedDefaultBlock Is the block unmodified default block.\n * @property {() => DOMRect} getBoundingClientRect    Get the bounding client rect of the block.\n * @property {number}        blockIndex               The index of the block.\n */\n\n/**\n * Get the drop target position from a given drop point and the orientation.\n *\n * @param {WPBlockData[]}          blocksData  The block data list.\n * @param {WPPoint}                position    The position of the item being dragged.\n * @param {WPBlockListOrientation} orientation The orientation of the block list.\n * @return {[number, WPDropOperation]} The drop target position.\n */\nexport function getDropTargetPosition(\n\tblocksData,\n\tposition,\n\torientation = 'vertical'\n) {\n\tconst allowedEdges =\n\t\torientation === 'horizontal'\n\t\t\t? [ 'left', 'right' ]\n\t\t\t: [ 'top', 'bottom' ];\n\n\tconst isRightToLeft = isRTL();\n\n\tlet nearestIndex = 0;\n\tlet insertPosition = 'before';\n\tlet minDistance = Infinity;\n\n\tblocksData.forEach(\n\t\t( { isUnmodifiedDefaultBlock, getBoundingClientRect, blockIndex } ) => {\n\t\t\tconst rect = getBoundingClientRect();\n\n\t\t\tlet [ distance, edge ] = getDistanceToNearestEdge(\n\t\t\t\tposition,\n\t\t\t\trect,\n\t\t\t\tallowedEdges\n\t\t\t);\n\t\t\t// Prioritize the element if the point is inside of an unmodified default block.\n\t\t\tif (\n\t\t\t\tisUnmodifiedDefaultBlock &&\n\t\t\t\tisPointContainedByRect( position, rect )\n\t\t\t) {\n\t\t\t\tdistance = 0;\n\t\t\t}\n\n\t\t\tif ( distance < minDistance ) {\n\t\t\t\t// Where the dropped block will be inserted on the nearest block.\n\t\t\t\tinsertPosition =\n\t\t\t\t\tedge === 'bottom' ||\n\t\t\t\t\t( ! isRightToLeft && edge === 'right' ) ||\n\t\t\t\t\t( isRightToLeft && edge === 'left' )\n\t\t\t\t\t\t? 'after'\n\t\t\t\t\t\t: 'before';\n\n\t\t\t\t// Update the currently known best candidate.\n\t\t\t\tminDistance = distance;\n\t\t\t\tnearestIndex = blockIndex;\n\t\t\t}\n\t\t}\n\t);\n\n\tconst adjacentIndex =\n\t\tnearestIndex + ( insertPosition === 'after' ? 1 : -1 );\n\tconst isNearestBlockUnmodifiedDefaultBlock =\n\t\t!! blocksData[ nearestIndex ]?.isUnmodifiedDefaultBlock;\n\tconst isAdjacentBlockUnmodifiedDefaultBlock =\n\t\t!! blocksData[ adjacentIndex ]?.isUnmodifiedDefaultBlock;\n\n\t// If both blocks are not unmodified default blocks then just insert between them.\n\tif (\n\t\t! isNearestBlockUnmodifiedDefaultBlock &&\n\t\t! isAdjacentBlockUnmodifiedDefaultBlock\n\t) {\n\t\t// If the user is dropping to the trailing edge of the block\n\t\t// add 1 to the index to represent dragging after.\n\t\tconst insertionIndex =\n\t\t\tinsertPosition === 'after' ? nearestIndex + 1 : nearestIndex;\n\t\treturn [ insertionIndex, 'insert' ];\n\t}\n\n\t// Otherwise, replace the nearest unmodified default block.\n\treturn [\n\t\tisNearestBlockUnmodifiedDefaultBlock ? nearestIndex : adjacentIndex,\n\t\t'replace',\n\t];\n}\n\n/**\n * @typedef  {Object} WPBlockDropZoneConfig\n * @property {string} rootClientId The root client id for the block list.\n */\n\n/**\n * A React hook that can be used to make a block list handle drag and drop.\n *\n * @param {WPBlockDropZoneConfig} dropZoneConfig configuration data for the drop zone.\n */\nexport default function useBlockDropZone( {\n\t// An undefined value represents a top-level block. Default to an empty\n\t// string for this so that `targetRootClientId` can be easily compared to\n\t// values returned by the `getRootBlockClientId` selector, which also uses\n\t// an empty string to represent top-level blocks.\n\trootClientId: targetRootClientId = '',\n} = {} ) {\n\tconst registry = useRegistry();\n\tconst [ dropTarget, setDropTarget ] = useState( {\n\t\tindex: null,\n\t\toperation: 'insert',\n\t} );\n\n\tconst isDisabled = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\t__unstableIsWithinBlockOverlay,\n\t\t\t\t__unstableHasActiveBlockOverlayActive,\n\t\t\t\tgetBlockEditingMode,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst blockEditingMode = getBlockEditingMode( targetRootClientId );\n\t\t\treturn (\n\t\t\t\tblockEditingMode !== 'default' ||\n\t\t\t\t__unstableHasActiveBlockOverlayActive( targetRootClientId ) ||\n\t\t\t\t__unstableIsWithinBlockOverlay( targetRootClientId )\n\t\t\t);\n\t\t},\n\t\t[ targetRootClientId ]\n\t);\n\n\tconst { getBlockListSettings, getBlocks, getBlockIndex } =\n\t\tuseSelect( blockEditorStore );\n\tconst { showInsertionPoint, hideInsertionPoint } =\n\t\tuseDispatch( blockEditorStore );\n\n\tconst onBlockDrop = useOnBlockDrop( targetRootClientId, dropTarget.index, {\n\t\toperation: dropTarget.operation,\n\t} );\n\tconst throttled = useThrottle(\n\t\tuseCallback(\n\t\t\t( event, ownerDocument ) => {\n\t\t\t\tconst blocks = getBlocks( targetRootClientId );\n\n\t\t\t\t// The block list is empty, don't show the insertion point but still allow dropping.\n\t\t\t\tif ( blocks.length === 0 ) {\n\t\t\t\t\tregistry.batch( () => {\n\t\t\t\t\t\tsetDropTarget( {\n\t\t\t\t\t\t\tindex: 0,\n\t\t\t\t\t\t\toperation: 'insert',\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tshowInsertionPoint( targetRootClientId, 0, {\n\t\t\t\t\t\t\toperation: 'insert',\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst blocksData = blocks.map( ( block ) => {\n\t\t\t\t\tconst clientId = block.clientId;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisUnmodifiedDefaultBlock:\n\t\t\t\t\t\t\tgetIsUnmodifiedDefaultBlock( block ),\n\t\t\t\t\t\tgetBoundingClientRect: () =>\n\t\t\t\t\t\t\townerDocument\n\t\t\t\t\t\t\t\t.getElementById( `block-${ clientId }` )\n\t\t\t\t\t\t\t\t.getBoundingClientRect(),\n\t\t\t\t\t\tblockIndex: getBlockIndex( clientId ),\n\t\t\t\t\t};\n\t\t\t\t} );\n\n\t\t\t\tconst [ targetIndex, operation ] = getDropTargetPosition(\n\t\t\t\t\tblocksData,\n\t\t\t\t\t{ x: event.clientX, y: event.clientY },\n\t\t\t\t\tgetBlockListSettings( targetRootClientId )?.orientation\n\t\t\t\t);\n\n\t\t\t\tregistry.batch( () => {\n\t\t\t\t\tsetDropTarget( {\n\t\t\t\t\t\tindex: targetIndex,\n\t\t\t\t\t\toperation,\n\t\t\t\t\t} );\n\t\t\t\t\tshowInsertionPoint( targetRootClientId, targetIndex, {\n\t\t\t\t\t\toperation,\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t},\n\t\t\t[\n\t\t\t\tgetBlocks,\n\t\t\t\ttargetRootClientId,\n\t\t\t\tgetBlockListSettings,\n\t\t\t\tregistry,\n\t\t\t\tshowInsertionPoint,\n\t\t\t\tgetBlockIndex,\n\t\t\t]\n\t\t),\n\t\t200\n\t);\n\n\treturn useDropZone( {\n\t\tisDisabled,\n\t\tonDrop: onBlockDrop,\n\t\tonDragOver( event ) {\n\t\t\t// `currentTarget` is only available while the event is being\n\t\t\t// handled, so get it now and pass it to the thottled function.\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget\n\t\t\tthrottled( event, event.currentTarget.ownerDocument );\n\t\t},\n\t\tonDragLeave() {\n\t\t\tthrottled.cancel();\n\t\t\thideInsertionPoint();\n\t\t},\n\t\tonDragEnd() {\n\t\t\tthrottled.cancel();\n\t\t\thideInsertionPoint();\n\t\t},\n\t} );\n}\n"],"mappings":"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"}