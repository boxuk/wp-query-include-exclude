{"version":3,"names":["_element","require","_classnames","_interopRequireDefault","_data","_blocks","_compose","_richText","_url","_autocomplete","_blockEdit","_removeBrowserShortcuts","_filePasteHandler","_formatToolbarContainer","_store","_utils","_embedHandlerPicker","_content","_shortcut","_toolbarButton","_inputEvent","classes","RichTextWrapper","children","tagName","start","reversed","value","originalValue","onChange","originalOnChange","isSelected","originalIsSelected","multiline","inlineToolbar","wrapperClassName","autocompleters","onReplace","placeholder","allowedFormats","withoutInteractiveFormatting","onRemove","onMerge","onSplit","__unstableOnSplitAtEnd","onSplitAtEnd","__unstableOnSplitMiddle","onSplitMiddle","identifier","preserveWhiteSpace","__unstablePastePlainText","pastePlainText","__unstableEmbedURLOnPaste","__unstableDisableFormats","disableFormats","disableLineBreaks","unstableOnFocus","__unstableAllowPrefixTransformations","__unstableMultilineRootTag","__unstableMobileNoFocusOnMount","deleteEnter","placeholderTextColor","textAlign","selectionColor","tagsToEliminate","disableEditingMenu","fontSize","fontFamily","fontWeight","fontStyle","minWidth","maxWidth","onBlur","setRef","disableSuggestions","disableAutocorrection","containerWidth","onEnter","onCustomEnter","props","forwardedRef","instanceId","useInstanceId","fallbackRef","useRef","clientId","blockIsSelected","useBlockEditContext","embedHandlerPickerRef","selector","select","getSelectionStart","getSelectionEnd","getSettings","didAutomaticChange","getBlock","isMultiSelecting","hasMultiSelection","blockEditorStore","selectionStart","selectionEnd","__experimentalUndo","undo","undefined","attributeKey","extraProps","Platform","OS","block","shouldBlurOnUnmount","isUnmodifiedDefaultBlock","offset","disabled","useSelect","__unstableMarkLastChangeAsPersistent","enterFormattedText","exitFormattedText","selectionChange","__unstableMarkAutomaticChange","useDispatch","multilineTag","getMultilineTag","adjustedAllowedFormats","getAllowedFormats","hasFormats","length","adjustedValue","adjustedOnChange","Array","isArray","childrenSource","toHTML","newValue","fromDOM","__unstableCreateElement","document","childNodes","onSelectionChange","useCallback","selectionChangeStart","selectionChangeEnd","onDelete","isReverse","isEmpty","splitValue","record","pastedBlocks","blocks","before","after","split","hasPastedBlocks","lastPastedBlockIndex","isAfterOriginal","push","toHTMLString","indexToSelect","initialPosition","shiftKey","canSplit","transforms","getBlockTransforms","filter","type","transformation","findTransform","item","regExp","test","text","transform","content","splitStart","end","splitEnd","canSplitAtEnd","insert","onPaste","html","plainText","isInternal","files","activeFormats","pastedValue","create","multilineWrapperTags","addActiveFormats","pasteHandler","HTML","filePasteHandler","mode","window","console","log","isShortcode","isPastedURL","isURL","trim","presentEmbedHandlerPicker","current","presentPicker","createEmbed","createLink","createLinkInParagraph","valueToInsert","canPasteEmbed","name","inputRule","valueToFormat","startPosition","characterBefore","slice","trimmedTextBefore","prefixTransforms","prefix","mergedRef","useMergeRefs","createElement","__experimentalRichText","ref","__unstableIsSelected","__unstableInputRule","__unstableMultilineTag","__unstableOnEnterFormattedText","__unstableOnExitFormattedText","__unstableOnCreateUndoLevel","__unstableDidAutomaticChange","__unstableUndo","id","style","nestedIsSelected","onFocus","editableProps","editableTagName","TagName","Fragment","default","inline","anchorRef","RemoveBrowserShortcuts","completers","contentRef","listBoxId","activeId","onKeyDown","className","classnames","event","ForwardedRichTextContainer","forwardRef","Content","defaultProps","format","_default","exports"],"sources":["@wordpress/block-editor/src/components/rich-text/index.native.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Platform, useRef, useCallback, forwardRef } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport {\n\tpasteHandler,\n\tchildren as childrenSource,\n\tgetBlockTransforms,\n\tfindTransform,\n\tisUnmodifiedDefaultBlock,\n} from '@wordpress/blocks';\nimport { useInstanceId, useMergeRefs } from '@wordpress/compose';\nimport {\n\t__experimentalRichText as RichText,\n\t__unstableCreateElement,\n\tisEmpty,\n\tinsert,\n\tcreate,\n\tsplit,\n\ttoHTMLString,\n\tslice,\n} from '@wordpress/rich-text';\nimport { isURL } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport Autocomplete from '../autocomplete';\nimport { useBlockEditContext } from '../block-edit';\nimport { RemoveBrowserShortcuts } from './remove-browser-shortcuts';\nimport { filePasteHandler } from './file-paste-handler';\nimport FormatToolbarContainer from './format-toolbar-container';\nimport { store as blockEditorStore } from '../../store';\nimport {\n\taddActiveFormats,\n\tgetMultilineTag,\n\tgetAllowedFormats,\n\tisShortcode,\n\tcreateLinkInParagraph,\n} from './utils';\nimport EmbedHandlerPicker from './embed-handler-picker';\nimport { Content } from './content';\n\nconst classes = 'block-editor-rich-text__editable';\n\nfunction RichTextWrapper(\n\t{\n\t\tchildren,\n\t\ttagName,\n\t\tstart,\n\t\treversed,\n\t\tvalue: originalValue,\n\t\tonChange: originalOnChange,\n\t\tisSelected: originalIsSelected,\n\t\tmultiline,\n\t\tinlineToolbar,\n\t\twrapperClassName,\n\t\tautocompleters,\n\t\tonReplace,\n\t\tplaceholder,\n\t\tallowedFormats,\n\t\twithoutInteractiveFormatting,\n\t\tonRemove,\n\t\tonMerge,\n\t\tonSplit,\n\t\t__unstableOnSplitAtEnd: onSplitAtEnd,\n\t\t__unstableOnSplitMiddle: onSplitMiddle,\n\t\tidentifier,\n\t\tpreserveWhiteSpace,\n\t\t__unstablePastePlainText: pastePlainText,\n\t\t__unstableEmbedURLOnPaste,\n\t\t__unstableDisableFormats: disableFormats,\n\t\tdisableLineBreaks,\n\t\tunstableOnFocus,\n\t\t__unstableAllowPrefixTransformations,\n\t\t__unstableMultilineRootTag,\n\t\t// Native props.\n\t\t__unstableMobileNoFocusOnMount,\n\t\tdeleteEnter,\n\t\tplaceholderTextColor,\n\t\ttextAlign,\n\t\tselectionColor,\n\t\ttagsToEliminate,\n\t\tdisableEditingMenu,\n\t\tfontSize,\n\t\tfontFamily,\n\t\tfontWeight,\n\t\tfontStyle,\n\t\tminWidth,\n\t\tmaxWidth,\n\t\tonBlur,\n\t\tsetRef,\n\t\tdisableSuggestions,\n\t\tdisableAutocorrection,\n\t\tcontainerWidth,\n\t\tonEnter: onCustomEnter,\n\t\t...props\n\t},\n\tforwardedRef\n) {\n\tconst instanceId = useInstanceId( RichTextWrapper );\n\n\tidentifier = identifier || instanceId;\n\n\tconst fallbackRef = useRef();\n\tconst { clientId, isSelected: blockIsSelected } = useBlockEditContext();\n\tconst embedHandlerPickerRef = useRef();\n\tconst selector = ( select ) => {\n\t\tconst {\n\t\t\tgetSelectionStart,\n\t\t\tgetSelectionEnd,\n\t\t\tgetSettings,\n\t\t\tdidAutomaticChange,\n\t\t\tgetBlock,\n\t\t\tisMultiSelecting,\n\t\t\thasMultiSelection,\n\t\t} = select( blockEditorStore );\n\n\t\tconst selectionStart = getSelectionStart();\n\t\tconst selectionEnd = getSelectionEnd();\n\t\tconst { __experimentalUndo: undo } = getSettings();\n\n\t\tlet isSelected;\n\n\t\tif ( originalIsSelected === undefined ) {\n\t\t\tisSelected =\n\t\t\t\tselectionStart.clientId === clientId &&\n\t\t\t\tselectionStart.attributeKey === identifier;\n\t\t} else if ( originalIsSelected ) {\n\t\t\tisSelected = selectionStart.clientId === clientId;\n\t\t}\n\n\t\tlet extraProps = {};\n\t\tif ( Platform.OS === 'native' ) {\n\t\t\t// If the block of this RichText is unmodified then it's a candidate for replacing when adding a new block.\n\t\t\t// In order to fix https://github.com/wordpress-mobile/gutenberg-mobile/issues/1126, let's blur on unmount in that case.\n\t\t\t// This apparently assumes functionality the BlockHlder actually.\n\t\t\tconst block = clientId && getBlock( clientId );\n\t\t\tconst shouldBlurOnUnmount =\n\t\t\t\tblock && isSelected && isUnmodifiedDefaultBlock( block );\n\t\t\textraProps = {\n\t\t\t\tshouldBlurOnUnmount,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tselectionStart: isSelected ? selectionStart.offset : undefined,\n\t\t\tselectionEnd: isSelected ? selectionEnd.offset : undefined,\n\t\t\tisSelected,\n\t\t\tdidAutomaticChange: didAutomaticChange(),\n\t\t\tdisabled: isMultiSelecting() || hasMultiSelection(),\n\t\t\tundo,\n\t\t\t...extraProps,\n\t\t};\n\t};\n\t// This selector must run on every render so the right selection state is\n\t// retrieved from the store on merge.\n\t// To do: fix this somehow.\n\tconst {\n\t\tselectionStart,\n\t\tselectionEnd,\n\t\tisSelected,\n\t\tdidAutomaticChange,\n\t\tdisabled,\n\t\tundo,\n\t\tshouldBlurOnUnmount,\n\t} = useSelect( selector );\n\tconst {\n\t\t__unstableMarkLastChangeAsPersistent,\n\t\tenterFormattedText,\n\t\texitFormattedText,\n\t\tselectionChange,\n\t\t__unstableMarkAutomaticChange,\n\t} = useDispatch( blockEditorStore );\n\tconst multilineTag = getMultilineTag( multiline );\n\tconst adjustedAllowedFormats = getAllowedFormats( {\n\t\tallowedFormats,\n\t\tdisableFormats,\n\t} );\n\tconst hasFormats =\n\t\t! adjustedAllowedFormats || adjustedAllowedFormats.length > 0;\n\tlet adjustedValue = originalValue;\n\tlet adjustedOnChange = originalOnChange;\n\n\t// Handle deprecated format.\n\tif ( Array.isArray( originalValue ) ) {\n\t\tadjustedValue = childrenSource.toHTML( originalValue );\n\t\tadjustedOnChange = ( newValue ) =>\n\t\t\toriginalOnChange(\n\t\t\t\tchildrenSource.fromDOM(\n\t\t\t\t\t__unstableCreateElement( document, newValue ).childNodes\n\t\t\t\t)\n\t\t\t);\n\t}\n\n\tconst onSelectionChange = useCallback(\n\t\t( selectionChangeStart, selectionChangeEnd ) => {\n\t\t\tselectionChange(\n\t\t\t\tclientId,\n\t\t\t\tidentifier,\n\t\t\t\tselectionChangeStart,\n\t\t\t\tselectionChangeEnd\n\t\t\t);\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[ clientId, identifier ]\n\t);\n\n\tconst onDelete = useCallback(\n\t\t( { value, isReverse } ) => {\n\t\t\tif ( onMerge ) {\n\t\t\t\tonMerge( ! isReverse );\n\t\t\t}\n\n\t\t\t// Only handle remove on Backspace. This serves dual-purpose of being\n\t\t\t// an intentional user interaction distinguishing between Backspace and\n\t\t\t// Delete to remove the empty field, but also to avoid merge & remove\n\t\t\t// causing destruction of two fields (merge, then removed merged).\n\t\t\tif ( onRemove && isEmpty( value ) && isReverse ) {\n\t\t\t\tonRemove( ! isReverse );\n\t\t\t}\n\t\t},\n\t\t[ onMerge, onRemove ]\n\t);\n\n\t/**\n\t * Signals to the RichText owner that the block can be replaced with two\n\t * blocks as a result of splitting the block by pressing enter, or with\n\t * blocks as a result of splitting the block by pasting block content in the\n\t * instance.\n\t *\n\t * @param {Object} record       The rich text value to split.\n\t * @param {Array}  pastedBlocks The pasted blocks to insert, if any.\n\t */\n\tconst splitValue = useCallback(\n\t\t( record, pastedBlocks = [] ) => {\n\t\t\tif ( ! onReplace || ! onSplit ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst blocks = [];\n\t\t\tconst [ before, after ] = split( record );\n\t\t\tconst hasPastedBlocks = pastedBlocks.length > 0;\n\t\t\tlet lastPastedBlockIndex = -1;\n\n\t\t\t// Consider the after value to be the original it is not empty and\n\t\t\t// the before value *is* empty.\n\t\t\tconst isAfterOriginal = isEmpty( before ) && ! isEmpty( after );\n\n\t\t\t// Create a block with the content before the caret if there's no pasted\n\t\t\t// blocks, or if there are pasted blocks and the value is not empty.\n\t\t\t// We do not want a leading empty block on paste, but we do if split\n\t\t\t// with e.g. the enter key.\n\t\t\tif ( ! hasPastedBlocks || ! isEmpty( before ) ) {\n\t\t\t\tblocks.push(\n\t\t\t\t\tonSplit(\n\t\t\t\t\t\ttoHTMLString( {\n\t\t\t\t\t\t\tvalue: before,\n\t\t\t\t\t\t\tmultilineTag,\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\t! isAfterOriginal\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tlastPastedBlockIndex += 1;\n\t\t\t}\n\n\t\t\tif ( hasPastedBlocks ) {\n\t\t\t\tblocks.push( ...pastedBlocks );\n\t\t\t\tlastPastedBlockIndex += pastedBlocks.length;\n\t\t\t} else if ( onSplitMiddle ) {\n\t\t\t\tblocks.push( onSplitMiddle() );\n\t\t\t}\n\n\t\t\t// If there's pasted blocks, append a block with non empty content\n\t\t\t// after the caret. Otherwise, do append an empty block if there\n\t\t\t// is no `onSplitMiddle` prop, but if there is and the content is\n\t\t\t// empty, the middle block is enough to set focus in.\n\t\t\tif (\n\t\t\t\thasPastedBlocks\n\t\t\t\t\t? ! isEmpty( after )\n\t\t\t\t\t: ! onSplitMiddle || ! isEmpty( after )\n\t\t\t) {\n\t\t\t\tblocks.push(\n\t\t\t\t\tonSplit(\n\t\t\t\t\t\ttoHTMLString( {\n\t\t\t\t\t\t\tvalue: after,\n\t\t\t\t\t\t\tmultilineTag,\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\tisAfterOriginal\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// If there are pasted blocks, set the selection to the last one.\n\t\t\t// Otherwise, set the selection to the second block.\n\t\t\tconst indexToSelect = hasPastedBlocks ? lastPastedBlockIndex : 1;\n\n\t\t\t// If there are pasted blocks, move the caret to the end of the selected block\n\t\t\t// Otherwise, retain the default value.\n\t\t\tconst initialPosition = hasPastedBlocks ? -1 : 0;\n\n\t\t\tonReplace( blocks, indexToSelect, initialPosition );\n\t\t},\n\t\t[ onReplace, onSplit, multilineTag, onSplitMiddle ]\n\t);\n\n\tconst onEnter = useCallback(\n\t\t( { value, onChange, shiftKey } ) => {\n\t\t\tconst canSplit = onReplace && onSplit;\n\n\t\t\tif ( onReplace ) {\n\t\t\t\tconst transforms = getBlockTransforms( 'from' ).filter(\n\t\t\t\t\t( { type } ) => type === 'enter'\n\t\t\t\t);\n\t\t\t\tconst transformation = findTransform( transforms, ( item ) => {\n\t\t\t\t\treturn item.regExp.test( value.text );\n\t\t\t\t} );\n\n\t\t\t\tif ( transformation ) {\n\t\t\t\t\tonReplace( [\n\t\t\t\t\t\ttransformation.transform( { content: value.text } ),\n\t\t\t\t\t] );\n\t\t\t\t\t__unstableMarkAutomaticChange();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( onCustomEnter ) {\n\t\t\t\tonCustomEnter();\n\t\t\t}\n\n\t\t\tconst { text, start: splitStart, end: splitEnd } = value;\n\t\t\tconst canSplitAtEnd =\n\t\t\t\tonSplitAtEnd &&\n\t\t\t\tsplitStart === splitEnd &&\n\t\t\t\tsplitEnd === text.length;\n\n\t\t\tif ( shiftKey || ( ! canSplit && ! canSplitAtEnd ) ) {\n\t\t\t\tif ( ! disableLineBreaks ) {\n\t\t\t\t\tonChange( insert( value, '\\n' ) );\n\t\t\t\t}\n\t\t\t} else if ( ! canSplit && canSplitAtEnd ) {\n\t\t\t\tonSplitAtEnd();\n\t\t\t} else if ( canSplit ) {\n\t\t\t\tsplitValue( value );\n\t\t\t}\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[\n\t\t\tonReplace,\n\t\t\tonSplit,\n\t\t\t__unstableMarkAutomaticChange,\n\t\t\tmultiline,\n\t\t\tsplitValue,\n\t\t\tonSplitAtEnd,\n\t\t]\n\t);\n\n\tconst onPaste = useCallback(\n\t\t( {\n\t\t\tvalue,\n\t\t\tonChange,\n\t\t\thtml,\n\t\t\tplainText,\n\t\t\tisInternal,\n\t\t\tfiles,\n\t\t\tactiveFormats,\n\t\t} ) => {\n\t\t\t// If the data comes from a rich text instance, we can directly use it\n\t\t\t// without filtering the data. The filters are only meant for externally\n\t\t\t// pasted content and remove inline styles.\n\t\t\tif ( isInternal ) {\n\t\t\t\tconst pastedValue = create( {\n\t\t\t\t\thtml,\n\t\t\t\t\tmultilineTag,\n\t\t\t\t\tmultilineWrapperTags:\n\t\t\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\t\t\tpreserveWhiteSpace,\n\t\t\t\t} );\n\t\t\t\taddActiveFormats( pastedValue, activeFormats );\n\t\t\t\tonChange( insert( value, pastedValue ) );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( pastePlainText ) {\n\t\t\t\tonChange( insert( value, create( { text: plainText } ) ) );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Only process file if no HTML is present.\n\t\t\t// Note: a pasted file may have the URL as plain text.\n\t\t\tif ( files && files.length && ! html ) {\n\t\t\t\tconst content = pasteHandler( {\n\t\t\t\t\tHTML: filePasteHandler( files ),\n\t\t\t\t\tmode: 'BLOCKS',\n\t\t\t\t\ttagName,\n\t\t\t\t\tpreserveWhiteSpace,\n\t\t\t\t} );\n\n\t\t\t\t// Allows us to ask for this information when we get a report.\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\twindow.console.log( 'Received items:\\n\\n', files );\n\n\t\t\t\tif ( onReplace && isEmpty( value ) ) {\n\t\t\t\t\tonReplace( content );\n\t\t\t\t} else {\n\t\t\t\t\tsplitValue( value, content );\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet mode = onReplace && onSplit ? 'AUTO' : 'INLINE';\n\n\t\t\t// Force the blocks mode when the user is pasting\n\t\t\t// on a new line & the content resembles a shortcode.\n\t\t\t// Otherwise it's going to be detected as inline\n\t\t\t// and the shortcode won't be replaced.\n\t\t\tif (\n\t\t\t\tmode === 'AUTO' &&\n\t\t\t\tisEmpty( value ) &&\n\t\t\t\tisShortcode( plainText )\n\t\t\t) {\n\t\t\t\tmode = 'BLOCKS';\n\t\t\t}\n\n\t\t\tconst isPastedURL = isURL( plainText.trim() );\n\t\t\tconst presentEmbedHandlerPicker = () =>\n\t\t\t\tembedHandlerPickerRef.current?.presentPicker( {\n\t\t\t\t\tcreateEmbed: () =>\n\t\t\t\t\t\tonReplace( content, content.length - 1, -1 ),\n\t\t\t\t\tcreateLink: () =>\n\t\t\t\t\t\tcreateLinkInParagraph( plainText.trim(), onReplace ),\n\t\t\t\t} );\n\n\t\t\tif (\n\t\t\t\t__unstableEmbedURLOnPaste &&\n\t\t\t\tisEmpty( value ) &&\n\t\t\t\tisPastedURL\n\t\t\t) {\n\t\t\t\tmode = 'BLOCKS';\n\t\t\t}\n\n\t\t\tconst content = pasteHandler( {\n\t\t\t\tHTML: html,\n\t\t\t\tplainText,\n\t\t\t\tmode,\n\t\t\t\ttagName,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} );\n\n\t\t\tif ( typeof content === 'string' ) {\n\t\t\t\tconst valueToInsert = create( { html: content } );\n\t\t\t\taddActiveFormats( valueToInsert, activeFormats );\n\t\t\t\tonChange( insert( value, valueToInsert ) );\n\t\t\t} else if ( content.length > 0 ) {\n\t\t\t\t// When an URL is pasted in an empty paragraph then the EmbedHandlerPicker should showcase options allowing the transformation of that URL\n\t\t\t\t// into either an Embed block or a link within the target paragraph. If the paragraph is non-empty, the URL is pasted as text.\n\t\t\t\tconst canPasteEmbed =\n\t\t\t\t\tisPastedURL &&\n\t\t\t\t\tcontent.length === 1 &&\n\t\t\t\t\tcontent[ 0 ].name === 'core/embed';\n\t\t\t\tif ( onReplace && isEmpty( value ) ) {\n\t\t\t\t\tif ( canPasteEmbed ) {\n\t\t\t\t\t\tonChange(\n\t\t\t\t\t\t\tinsert( value, create( { text: plainText } ) )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( __unstableEmbedURLOnPaste ) {\n\t\t\t\t\t\t\tpresentEmbedHandlerPicker();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tonReplace( content, content.length - 1, -1 );\n\t\t\t\t} else {\n\t\t\t\t\tif ( canPasteEmbed ) {\n\t\t\t\t\t\tonChange(\n\t\t\t\t\t\t\tinsert( value, create( { text: plainText } ) )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tsplitValue( value, content );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\ttagName,\n\t\t\tonReplace,\n\t\t\tonSplit,\n\t\t\tsplitValue,\n\t\t\t__unstableEmbedURLOnPaste,\n\t\t\tmultilineTag,\n\t\t\tpreserveWhiteSpace,\n\t\t\tpastePlainText,\n\t\t]\n\t);\n\n\tconst inputRule = useCallback(\n\t\t( value, valueToFormat ) => {\n\t\t\tif ( ! onReplace ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { start: startPosition, text } = value;\n\t\t\tconst characterBefore = text.slice(\n\t\t\t\tstartPosition - 1,\n\t\t\t\tstartPosition\n\t\t\t);\n\n\t\t\t// The character right before the caret must be a plain space.\n\t\t\tif ( characterBefore !== ' ' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst trimmedTextBefore = text.slice( 0, startPosition ).trim();\n\t\t\tconst prefixTransforms = getBlockTransforms( 'from' ).filter(\n\t\t\t\t( { type } ) => type === 'prefix'\n\t\t\t);\n\t\t\tconst transformation = findTransform(\n\t\t\t\tprefixTransforms,\n\t\t\t\t( { prefix } ) => {\n\t\t\t\t\treturn trimmedTextBefore === prefix;\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif ( ! transformation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst content = valueToFormat(\n\t\t\t\tslice( value, startPosition, text.length )\n\t\t\t);\n\t\t\tconst block = transformation.transform( content );\n\n\t\t\tonReplace( [ block ] );\n\t\t\t__unstableMarkAutomaticChange();\n\t\t},\n\t\t[ onReplace, __unstableMarkAutomaticChange ]\n\t);\n\n\tconst mergedRef = useMergeRefs( [ forwardedRef, fallbackRef ] );\n\n\treturn (\n\t\t<RichText\n\t\t\tclientId={ clientId }\n\t\t\tidentifier={ identifier }\n\t\t\tref={ mergedRef }\n\t\t\tvalue={ adjustedValue }\n\t\t\tonChange={ adjustedOnChange }\n\t\t\tselectionStart={ selectionStart }\n\t\t\tselectionEnd={ selectionEnd }\n\t\t\tonSelectionChange={ onSelectionChange }\n\t\t\ttagName={ tagName }\n\t\t\tstart={ start }\n\t\t\treversed={ reversed }\n\t\t\tplaceholder={ placeholder }\n\t\t\tallowedFormats={ adjustedAllowedFormats }\n\t\t\twithoutInteractiveFormatting={ withoutInteractiveFormatting }\n\t\t\tonEnter={ onEnter }\n\t\t\tonDelete={ onDelete }\n\t\t\tonPaste={ onPaste }\n\t\t\t__unstableIsSelected={ isSelected }\n\t\t\t__unstableInputRule={ inputRule }\n\t\t\t__unstableMultilineTag={ multilineTag }\n\t\t\t__unstableOnEnterFormattedText={ enterFormattedText }\n\t\t\t__unstableOnExitFormattedText={ exitFormattedText }\n\t\t\t__unstableOnCreateUndoLevel={ __unstableMarkLastChangeAsPersistent }\n\t\t\t__unstableMarkAutomaticChange={ __unstableMarkAutomaticChange }\n\t\t\t__unstableDidAutomaticChange={ didAutomaticChange }\n\t\t\t__unstableUndo={ undo }\n\t\t\t__unstableDisableFormats={ disableFormats }\n\t\t\tpreserveWhiteSpace={ preserveWhiteSpace }\n\t\t\tdisabled={ disabled }\n\t\t\tunstableOnFocus={ unstableOnFocus }\n\t\t\t__unstableAllowPrefixTransformations={\n\t\t\t\t__unstableAllowPrefixTransformations\n\t\t\t}\n\t\t\t__unstableMultilineRootTag={ __unstableMultilineRootTag }\n\t\t\t// Native props.\n\t\t\tblockIsSelected={\n\t\t\t\toriginalIsSelected !== undefined\n\t\t\t\t\t? originalIsSelected\n\t\t\t\t\t: blockIsSelected\n\t\t\t}\n\t\t\tshouldBlurOnUnmount={ shouldBlurOnUnmount }\n\t\t\t__unstableMobileNoFocusOnMount={ __unstableMobileNoFocusOnMount }\n\t\t\tdeleteEnter={ deleteEnter }\n\t\t\tplaceholderTextColor={ placeholderTextColor }\n\t\t\ttextAlign={ textAlign }\n\t\t\tselectionColor={ selectionColor }\n\t\t\ttagsToEliminate={ tagsToEliminate }\n\t\t\tdisableEditingMenu={ disableEditingMenu }\n\t\t\tfontSize={ fontSize }\n\t\t\tfontFamily={ fontFamily }\n\t\t\tfontWeight={ fontWeight }\n\t\t\tfontStyle={ fontStyle }\n\t\t\tminWidth={ minWidth }\n\t\t\tmaxWidth={ maxWidth }\n\t\t\tonBlur={ onBlur }\n\t\t\tsetRef={ setRef }\n\t\t\tdisableSuggestions={ disableSuggestions }\n\t\t\tdisableAutocorrection={ disableAutocorrection }\n\t\t\tcontainerWidth={ containerWidth }\n\t\t\t// Props to be set on the editable container are destructured on the\n\t\t\t// element itself for web (see below), but passed through rich text\n\t\t\t// for native.\n\t\t\tid={ props.id }\n\t\t\tstyle={ props.style }\n\t\t>\n\t\t\t{ ( {\n\t\t\t\tisSelected: nestedIsSelected,\n\t\t\t\tvalue,\n\t\t\t\tonChange,\n\t\t\t\tonFocus,\n\t\t\t\teditableProps,\n\t\t\t\teditableTagName: TagName,\n\t\t\t} ) => (\n\t\t\t\t<>\n\t\t\t\t\t{ children && children( { value, onChange, onFocus } ) }\n\t\t\t\t\t{ nestedIsSelected && hasFormats && (\n\t\t\t\t\t\t<FormatToolbarContainer\n\t\t\t\t\t\t\tinline={ inlineToolbar }\n\t\t\t\t\t\t\tanchorRef={ fallbackRef.current }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ nestedIsSelected && <RemoveBrowserShortcuts /> }\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tonReplace={ onReplace }\n\t\t\t\t\t\tcompleters={ autocompleters }\n\t\t\t\t\t\trecord={ value }\n\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\tisSelected={ nestedIsSelected }\n\t\t\t\t\t\tcontentRef={ fallbackRef }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ ( { listBoxId, activeId, onKeyDown } ) => (\n\t\t\t\t\t\t\t<TagName\n\t\t\t\t\t\t\t\t{ ...editableProps }\n\t\t\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\tprops.style\n\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t...props.style,\n\t\t\t\t\t\t\t\t\t\t\t\t...editableProps.style,\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t: editableProps.style\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t\t\t\tclasses,\n\t\t\t\t\t\t\t\t\tprops.className,\n\t\t\t\t\t\t\t\t\teditableProps.className\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\taria-autocomplete={\n\t\t\t\t\t\t\t\t\tlistBoxId ? 'list' : undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taria-owns={ listBoxId }\n\t\t\t\t\t\t\t\taria-activedescendant={ activeId }\n\t\t\t\t\t\t\t\tonKeyDown={ ( event ) => {\n\t\t\t\t\t\t\t\t\tonKeyDown( event );\n\t\t\t\t\t\t\t\t\teditableProps.onKeyDown( event );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</Autocomplete>\n\t\t\t\t\t<EmbedHandlerPicker ref={ embedHandlerPickerRef } />\n\t\t\t\t</>\n\t\t\t) }\n\t\t</RichText>\n\t);\n}\n\nconst ForwardedRichTextContainer = forwardRef( RichTextWrapper );\n\nForwardedRichTextContainer.Content = Content;\n\nForwardedRichTextContainer.isEmpty = ( value ) => {\n\treturn ! value || value.length === 0;\n};\n\nForwardedRichTextContainer.Content.defaultProps = {\n\tformat: 'string',\n\tvalue: '',\n};\n\n/**\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/rich-text/README.md\n */\nexport default ForwardedRichTextContainer;\nexport { RichTextShortcut } from './shortcut';\nexport { RichTextToolbarButton } from './toolbar-button';\nexport { __unstableRichTextInputEvent } from './input-event';\n"],"mappings":"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"}