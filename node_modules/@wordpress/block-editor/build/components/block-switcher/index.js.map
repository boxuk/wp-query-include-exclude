{"version":3,"names":["_i18n","require","_components","_blocks","_data","_icons","_store","_useBlockDisplayInformation","_interopRequireDefault","_blockIcon","_blockTransformationsMenu","_blockVariationTransformations","_blockStylesMenu","_patternTransformationsMenu","_useBlockDisplayTitle","BlockSwitcherDropdownMenu","clientIds","blocks","replaceBlocks","multiSelect","updateBlockAttributes","useDispatch","blockEditorStore","blockInformation","useBlockDisplayInformation","clientId","possibleBlockTransformations","canRemove","hasBlockStyles","icon","patterns","useSelect","select","getBlockRootClientId","getBlockTransformItems","__experimentalGetPatternTransformItems","canRemoveBlocks","getBlockStyles","getBlockType","blocksStore","rootClientId","Array","isArray","name","firstBlockName","_isSingleBlockSelected","length","styles","_icon","isSelectionOfSameType","Set","map","size","copy","blockVariationTransformations","useBlockVariationTransforms","blockTitle","useBlockDisplayTitle","maximumLength","isReusable","isReusableBlock","isTemplate","isTemplatePart","selectForMultipleBlocks","insertedBlocks","onBlockTransform","newBlocks","switchToBlockType","onBlockVariationTransform","find","variationName","attributes","onPatternTransform","transformedBlocks","hasPossibleBlockTransformations","hasPossibleBlockVariationTransformations","hasPatternTransformation","_element","createElement","ToolbarGroup","ToolbarButton","disabled","className","title","Fragment","default","showColors","blockSwitcherLabel","blockSwitcherDescription","sprintf","__","_n","hasBlockOrBlockVariationTransforms","showDropDown","ToolbarItem","toggleProps","DropdownMenu","label","popoverProps","placement","describedBy","menuProps","orientation","onClose","onSelect","possibleBlockVariationTransformations","onSelectVariation","hoveredBlock","onSwitch","exports","BlockSwitcher","getBlocksByClientId","some","block","_default"],"sources":["@wordpress/block-editor/src/components/block-switcher/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport {\n\tDropdownMenu,\n\tToolbarButton,\n\tToolbarGroup,\n\tToolbarItem,\n} from '@wordpress/components';\nimport {\n\tswitchToBlockType,\n\tstore as blocksStore,\n\tisReusableBlock,\n\tisTemplatePart,\n} from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { copy } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\nimport useBlockDisplayInformation from '../use-block-display-information';\nimport BlockIcon from '../block-icon';\nimport BlockTransformationsMenu from './block-transformations-menu';\nimport { useBlockVariationTransforms } from './block-variation-transformations';\nimport BlockStylesMenu from './block-styles-menu';\nimport PatternTransformationsMenu from './pattern-transformations-menu';\nimport useBlockDisplayTitle from '../block-title/use-block-display-title';\n\nexport const BlockSwitcherDropdownMenu = ( { clientIds, blocks } ) => {\n\tconst { replaceBlocks, multiSelect, updateBlockAttributes } =\n\t\tuseDispatch( blockEditorStore );\n\tconst blockInformation = useBlockDisplayInformation( blocks[ 0 ].clientId );\n\tconst {\n\t\tpossibleBlockTransformations,\n\t\tcanRemove,\n\t\thasBlockStyles,\n\t\ticon,\n\t\tpatterns,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetBlockTransformItems,\n\t\t\t\t__experimentalGetPatternTransformItems,\n\t\t\t\tcanRemoveBlocks,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst { getBlockStyles, getBlockType } = select( blocksStore );\n\t\t\tconst rootClientId = getBlockRootClientId(\n\t\t\t\tArray.isArray( clientIds ) ? clientIds[ 0 ] : clientIds\n\t\t\t);\n\t\t\tconst [ { name: firstBlockName } ] = blocks;\n\t\t\tconst _isSingleBlockSelected = blocks.length === 1;\n\t\t\tconst styles =\n\t\t\t\t_isSingleBlockSelected && getBlockStyles( firstBlockName );\n\t\t\tlet _icon;\n\t\t\tif ( _isSingleBlockSelected ) {\n\t\t\t\t_icon = blockInformation?.icon; // Take into account active block variations.\n\t\t\t} else {\n\t\t\t\tconst isSelectionOfSameType =\n\t\t\t\t\tnew Set( blocks.map( ( { name } ) => name ) ).size === 1;\n\t\t\t\t// When selection consists of blocks of multiple types, display an\n\t\t\t\t// appropriate icon to communicate the non-uniformity.\n\t\t\t\t_icon = isSelectionOfSameType\n\t\t\t\t\t? getBlockType( firstBlockName )?.icon\n\t\t\t\t\t: copy;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tpossibleBlockTransformations: getBlockTransformItems(\n\t\t\t\t\tblocks,\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t\tcanRemove: canRemoveBlocks( clientIds, rootClientId ),\n\t\t\t\thasBlockStyles: !! styles?.length,\n\t\t\t\ticon: _icon,\n\t\t\t\tpatterns: __experimentalGetPatternTransformItems(\n\t\t\t\t\tblocks,\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ clientIds, blocks, blockInformation?.icon ]\n\t);\n\n\tconst blockVariationTransformations = useBlockVariationTransforms( {\n\t\tclientIds,\n\t\tblocks,\n\t} );\n\n\tconst blockTitle = useBlockDisplayTitle( {\n\t\tclientId: Array.isArray( clientIds ) ? clientIds[ 0 ] : clientIds,\n\t\tmaximumLength: 35,\n\t} );\n\tconst isReusable = blocks.length === 1 && isReusableBlock( blocks[ 0 ] );\n\tconst isTemplate = blocks.length === 1 && isTemplatePart( blocks[ 0 ] );\n\n\tfunction selectForMultipleBlocks( insertedBlocks ) {\n\t\tif ( insertedBlocks.length > 1 ) {\n\t\t\tmultiSelect(\n\t\t\t\tinsertedBlocks[ 0 ].clientId,\n\t\t\t\tinsertedBlocks[ insertedBlocks.length - 1 ].clientId\n\t\t\t);\n\t\t}\n\t}\n\n\t// Simple block tranformation based on the `Block Transforms` API.\n\tfunction onBlockTransform( name ) {\n\t\tconst newBlocks = switchToBlockType( blocks, name );\n\t\treplaceBlocks( clientIds, newBlocks );\n\t\tselectForMultipleBlocks( newBlocks );\n\t}\n\n\tfunction onBlockVariationTransform( name ) {\n\t\tupdateBlockAttributes( blocks[ 0 ].clientId, {\n\t\t\t...blockVariationTransformations.find(\n\t\t\t\t( { name: variationName } ) => variationName === name\n\t\t\t).attributes,\n\t\t} );\n\t}\n\n\t// Pattern transformation through the `Patterns` API.\n\tfunction onPatternTransform( transformedBlocks ) {\n\t\treplaceBlocks( clientIds, transformedBlocks );\n\t\tselectForMultipleBlocks( transformedBlocks );\n\t}\n\n\t/**\n\t * The `isTemplate` check is a stopgap solution here.\n\t * Ideally, the Transforms API should handle this\n\t * by allowing to exclude blocks from wildcard transformations.\n\t */\n\tconst hasPossibleBlockTransformations =\n\t\t!! possibleBlockTransformations.length && canRemove && ! isTemplate;\n\tconst hasPossibleBlockVariationTransformations =\n\t\t!! blockVariationTransformations?.length;\n\tconst hasPatternTransformation = !! patterns?.length && canRemove;\n\tif (\n\t\t! hasBlockStyles &&\n\t\t! hasPossibleBlockTransformations &&\n\t\t! hasPossibleBlockVariationTransformations\n\t) {\n\t\treturn (\n\t\t\t<ToolbarGroup>\n\t\t\t\t<ToolbarButton\n\t\t\t\t\tdisabled\n\t\t\t\t\tclassName=\"block-editor-block-switcher__no-switcher-icon\"\n\t\t\t\t\ttitle={ blockTitle }\n\t\t\t\t\ticon={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<BlockIcon icon={ icon } showColors />\n\t\t\t\t\t\t\t{ ( isReusable || isTemplate ) && (\n\t\t\t\t\t\t\t\t<span className=\"block-editor-block-switcher__toggle-text\">\n\t\t\t\t\t\t\t\t\t{ blockTitle }\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</ToolbarGroup>\n\t\t);\n\t}\n\n\tconst blockSwitcherLabel = blockTitle;\n\n\tconst blockSwitcherDescription =\n\t\t1 === blocks.length\n\t\t\t? sprintf(\n\t\t\t\t\t/* translators: %s: block title. */\n\t\t\t\t\t__( '%s: Change block type or style' ),\n\t\t\t\t\tblockTitle\n\t\t\t  )\n\t\t\t: sprintf(\n\t\t\t\t\t/* translators: %d: number of blocks. */\n\t\t\t\t\t_n(\n\t\t\t\t\t\t'Change type of %d block',\n\t\t\t\t\t\t'Change type of %d blocks',\n\t\t\t\t\t\tblocks.length\n\t\t\t\t\t),\n\t\t\t\t\tblocks.length\n\t\t\t  );\n\n\tconst hasBlockOrBlockVariationTransforms =\n\t\thasPossibleBlockTransformations ||\n\t\thasPossibleBlockVariationTransformations;\n\tconst showDropDown =\n\t\thasBlockStyles ||\n\t\thasBlockOrBlockVariationTransforms ||\n\t\thasPatternTransformation;\n\treturn (\n\t\t<ToolbarGroup>\n\t\t\t<ToolbarItem>\n\t\t\t\t{ ( toggleProps ) => (\n\t\t\t\t\t<DropdownMenu\n\t\t\t\t\t\tclassName=\"block-editor-block-switcher\"\n\t\t\t\t\t\tlabel={ blockSwitcherLabel }\n\t\t\t\t\t\tpopoverProps={ {\n\t\t\t\t\t\t\tplacement: 'bottom-start',\n\t\t\t\t\t\t\tclassName: 'block-editor-block-switcher__popover',\n\t\t\t\t\t\t} }\n\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<BlockIcon\n\t\t\t\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\t\t\t\tclassName=\"block-editor-block-switcher__toggle\"\n\t\t\t\t\t\t\t\t\tshowColors\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{ ( isReusable || isTemplate ) && (\n\t\t\t\t\t\t\t\t\t<span className=\"block-editor-block-switcher__toggle-text\">\n\t\t\t\t\t\t\t\t\t\t{ blockTitle }\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttoggleProps={ {\n\t\t\t\t\t\t\tdescribedBy: blockSwitcherDescription,\n\t\t\t\t\t\t\t...toggleProps,\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tmenuProps={ { orientation: 'both' } }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ ( { onClose } ) =>\n\t\t\t\t\t\t\tshowDropDown && (\n\t\t\t\t\t\t\t\t<div className=\"block-editor-block-switcher__container\">\n\t\t\t\t\t\t\t\t\t{ hasPatternTransformation && (\n\t\t\t\t\t\t\t\t\t\t<PatternTransformationsMenu\n\t\t\t\t\t\t\t\t\t\t\tblocks={ blocks }\n\t\t\t\t\t\t\t\t\t\t\tpatterns={ patterns }\n\t\t\t\t\t\t\t\t\t\t\tonSelect={ (\n\t\t\t\t\t\t\t\t\t\t\t\ttransformedBlocks\n\t\t\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\t\t\tonPatternTransform(\n\t\t\t\t\t\t\t\t\t\t\t\t\ttransformedBlocks\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ hasBlockOrBlockVariationTransforms && (\n\t\t\t\t\t\t\t\t\t\t<BlockTransformationsMenu\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"block-editor-block-switcher__transforms__menugroup\"\n\t\t\t\t\t\t\t\t\t\t\tpossibleBlockTransformations={\n\t\t\t\t\t\t\t\t\t\t\t\tpossibleBlockTransformations\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tpossibleBlockVariationTransformations={\n\t\t\t\t\t\t\t\t\t\t\t\tblockVariationTransformations\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tblocks={ blocks }\n\t\t\t\t\t\t\t\t\t\t\tonSelect={ ( name ) => {\n\t\t\t\t\t\t\t\t\t\t\t\tonBlockTransform( name );\n\t\t\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t\tonSelectVariation={ ( name ) => {\n\t\t\t\t\t\t\t\t\t\t\t\tonBlockVariationTransform(\n\t\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ hasBlockStyles && (\n\t\t\t\t\t\t\t\t\t\t<BlockStylesMenu\n\t\t\t\t\t\t\t\t\t\t\thoveredBlock={ blocks[ 0 ] }\n\t\t\t\t\t\t\t\t\t\t\tonSwitch={ onClose }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</DropdownMenu>\n\t\t\t\t) }\n\t\t\t</ToolbarItem>\n\t\t</ToolbarGroup>\n\t);\n};\n\nexport const BlockSwitcher = ( { clientIds } ) => {\n\tconst blocks = useSelect(\n\t\t( select ) =>\n\t\t\tselect( blockEditorStore ).getBlocksByClientId( clientIds ),\n\t\t[ clientIds ]\n\t);\n\n\tif ( ! blocks.length || blocks.some( ( block ) => ! block ) ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<BlockSwitcherDropdownMenu clientIds={ clientIds } blocks={ blocks } />\n\t);\n};\n\nexport default BlockSwitcher;\n"],"mappings":";;;;;;;;AAGA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AAMA,IAAAE,OAAA,GAAAF,OAAA;AAMA,IAAAG,KAAA,GAAAH,OAAA;AACA,IAAAI,MAAA,GAAAJ,OAAA;AAKA,IAAAK,MAAA,GAAAL,OAAA;AACA,IAAAM,2BAAA,GAAAC,sBAAA,CAAAP,OAAA;AACA,IAAAQ,UAAA,GAAAD,sBAAA,CAAAP,OAAA;AACA,IAAAS,yBAAA,GAAAF,sBAAA,CAAAP,OAAA;AACA,IAAAU,8BAAA,GAAAV,OAAA;AACA,IAAAW,gBAAA,GAAAJ,sBAAA,CAAAP,OAAA;AACA,IAAAY,2BAAA,GAAAL,sBAAA,CAAAP,OAAA;AACA,IAAAa,qBAAA,GAAAN,sBAAA,CAAAP,OAAA;AA7BA;AACA;AACA;;AAiBA;AACA;AACA;;AAUO,MAAMc,yBAAyB,GAAGA,CAAE;EAAEC,SAAS;EAAEC;AAAO,CAAC,KAAM;EACrE,MAAM;IAAEC,aAAa;IAAEC,WAAW;IAAEC;EAAsB,CAAC,GAC1D,IAAAC,iBAAW,EAAEC,YAAiB,CAAC;EAChC,MAAMC,gBAAgB,GAAG,IAAAC,mCAA0B,EAAEP,MAAM,CAAE,CAAC,CAAE,CAACQ,QAAS,CAAC;EAC3E,MAAM;IACLC,4BAA4B;IAC5BC,SAAS;IACTC,cAAc;IACdC,IAAI;IACJC;EACD,CAAC,GAAG,IAAAC,eAAS,EACVC,MAAM,IAAM;IACb,MAAM;MACLC,oBAAoB;MACpBC,sBAAsB;MACtBC,sCAAsC;MACtCC;IACD,CAAC,GAAGJ,MAAM,CAAEV,YAAiB,CAAC;IAC9B,MAAM;MAAEe,cAAc;MAAEC;IAAa,CAAC,GAAGN,MAAM,CAAEO,aAAY,CAAC;IAC9D,MAAMC,YAAY,GAAGP,oBAAoB,CACxCQ,KAAK,CAACC,OAAO,CAAE1B,SAAU,CAAC,GAAGA,SAAS,CAAE,CAAC,CAAE,GAAGA,SAC/C,CAAC;IACD,MAAM,CAAE;MAAE2B,IAAI,EAAEC;IAAe,CAAC,CAAE,GAAG3B,MAAM;IAC3C,MAAM4B,sBAAsB,GAAG5B,MAAM,CAAC6B,MAAM,KAAK,CAAC;IAClD,MAAMC,MAAM,GACXF,sBAAsB,IAAIR,cAAc,CAAEO,cAAe,CAAC;IAC3D,IAAII,KAAK;IACT,IAAKH,sBAAsB,EAAG;MAC7BG,KAAK,GAAGzB,gBAAgB,EAAEM,IAAI,CAAC,CAAC;IACjC,CAAC,MAAM;MACN,MAAMoB,qBAAqB,GAC1B,IAAIC,GAAG,CAAEjC,MAAM,CAACkC,GAAG,CAAE,CAAE;QAAER;MAAK,CAAC,KAAMA,IAAK,CAAE,CAAC,CAACS,IAAI,KAAK,CAAC;MACzD;MACA;MACAJ,KAAK,GAAGC,qBAAqB,GAC1BX,YAAY,CAAEM,cAAe,CAAC,EAAEf,IAAI,GACpCwB,WAAI;IACR;IACA,OAAO;MACN3B,4BAA4B,EAAEQ,sBAAsB,CACnDjB,MAAM,EACNuB,YACD,CAAC;MACDb,SAAS,EAAES,eAAe,CAAEpB,SAAS,EAAEwB,YAAa,CAAC;MACrDZ,cAAc,EAAE,CAAC,CAAEmB,MAAM,EAAED,MAAM;MACjCjB,IAAI,EAAEmB,KAAK;MACXlB,QAAQ,EAAEK,sCAAsC,CAC/ClB,MAAM,EACNuB,YACD;IACD,CAAC;EACF,CAAC,EACD,CAAExB,SAAS,EAAEC,MAAM,EAAEM,gBAAgB,EAAEM,IAAI,CAC5C,CAAC;EAED,MAAMyB,6BAA6B,GAAG,IAAAC,0DAA2B,EAAE;IAClEvC,SAAS;IACTC;EACD,CAAE,CAAC;EAEH,MAAMuC,UAAU,GAAG,IAAAC,6BAAoB,EAAE;IACxChC,QAAQ,EAAEgB,KAAK,CAACC,OAAO,CAAE1B,SAAU,CAAC,GAAGA,SAAS,CAAE,CAAC,CAAE,GAAGA,SAAS;IACjE0C,aAAa,EAAE;EAChB,CAAE,CAAC;EACH,MAAMC,UAAU,GAAG1C,MAAM,CAAC6B,MAAM,KAAK,CAAC,IAAI,IAAAc,uBAAe,EAAE3C,MAAM,CAAE,CAAC,CAAG,CAAC;EACxE,MAAM4C,UAAU,GAAG5C,MAAM,CAAC6B,MAAM,KAAK,CAAC,IAAI,IAAAgB,sBAAc,EAAE7C,MAAM,CAAE,CAAC,CAAG,CAAC;EAEvE,SAAS8C,uBAAuBA,CAAEC,cAAc,EAAG;IAClD,IAAKA,cAAc,CAAClB,MAAM,GAAG,CAAC,EAAG;MAChC3B,WAAW,CACV6C,cAAc,CAAE,CAAC,CAAE,CAACvC,QAAQ,EAC5BuC,cAAc,CAAEA,cAAc,CAAClB,MAAM,GAAG,CAAC,CAAE,CAACrB,QAC7C,CAAC;IACF;EACD;;EAEA;EACA,SAASwC,gBAAgBA,CAAEtB,IAAI,EAAG;IACjC,MAAMuB,SAAS,GAAG,IAAAC,yBAAiB,EAAElD,MAAM,EAAE0B,IAAK,CAAC;IACnDzB,aAAa,CAAEF,SAAS,EAAEkD,SAAU,CAAC;IACrCH,uBAAuB,CAAEG,SAAU,CAAC;EACrC;EAEA,SAASE,yBAAyBA,CAAEzB,IAAI,EAAG;IAC1CvB,qBAAqB,CAAEH,MAAM,CAAE,CAAC,CAAE,CAACQ,QAAQ,EAAE;MAC5C,GAAG6B,6BAA6B,CAACe,IAAI,CACpC,CAAE;QAAE1B,IAAI,EAAE2B;MAAc,CAAC,KAAMA,aAAa,KAAK3B,IAClD,CAAC,CAAC4B;IACH,CAAE,CAAC;EACJ;;EAEA;EACA,SAASC,kBAAkBA,CAAEC,iBAAiB,EAAG;IAChDvD,aAAa,CAAEF,SAAS,EAAEyD,iBAAkB,CAAC;IAC7CV,uBAAuB,CAAEU,iBAAkB,CAAC;EAC7C;;EAEA;AACD;AACA;AACA;AACA;EACC,MAAMC,+BAA+B,GACpC,CAAC,CAAEhD,4BAA4B,CAACoB,MAAM,IAAInB,SAAS,IAAI,CAAEkC,UAAU;EACpE,MAAMc,wCAAwC,GAC7C,CAAC,CAAErB,6BAA6B,EAAER,MAAM;EACzC,MAAM8B,wBAAwB,GAAG,CAAC,CAAE9C,QAAQ,EAAEgB,MAAM,IAAInB,SAAS;EACjE,IACC,CAAEC,cAAc,IAChB,CAAE8C,+BAA+B,IACjC,CAAEC,wCAAwC,EACzC;IACD,OACC,IAAAE,QAAA,CAAAC,aAAA,EAAC5E,WAAA,CAAA6E,YAAY,QACZ,IAAAF,QAAA,CAAAC,aAAA,EAAC5E,WAAA,CAAA8E,aAAa;MACbC,QAAQ;MACRC,SAAS,EAAC,+CAA+C;MACzDC,KAAK,EAAG3B,UAAY;MACpB3B,IAAI,EACH,IAAAgD,QAAA,CAAAC,aAAA,EAAAD,QAAA,CAAAO,QAAA,QACC,IAAAP,QAAA,CAAAC,aAAA,EAACrE,UAAA,CAAA4E,OAAS;QAACxD,IAAI,EAAGA,IAAM;QAACyD,UAAU;MAAA,CAAE,CAAC,EACpC,CAAE3B,UAAU,IAAIE,UAAU,KAC3B,IAAAgB,QAAA,CAAAC,aAAA;QAAMI,SAAS,EAAC;MAA0C,GACvD1B,UACG,CAEN;IACF,CACD,CACY,CAAC;EAEjB;EAEA,MAAM+B,kBAAkB,GAAG/B,UAAU;EAErC,MAAMgC,wBAAwB,GAC7B,CAAC,KAAKvE,MAAM,CAAC6B,MAAM,GAChB,IAAA2C,aAAO,GACP;EACA,IAAAC,QAAE,EAAE,gCAAiC,CAAC,EACtClC,UACA,CAAC,GACD,IAAAiC,aAAO,GACP;EACA,IAAAE,QAAE,EACD,yBAAyB,EACzB,0BAA0B,EAC1B1E,MAAM,CAAC6B,MACR,CAAC,EACD7B,MAAM,CAAC6B,MACP,CAAC;EAEL,MAAM8C,kCAAkC,GACvClB,+BAA+B,IAC/BC,wCAAwC;EACzC,MAAMkB,YAAY,GACjBjE,cAAc,IACdgE,kCAAkC,IAClChB,wBAAwB;EACzB,OACC,IAAAC,QAAA,CAAAC,aAAA,EAAC5E,WAAA,CAAA6E,YAAY,QACZ,IAAAF,QAAA,CAAAC,aAAA,EAAC5E,WAAA,CAAA4F,WAAW,QACPC,WAAW,IACd,IAAAlB,QAAA,CAAAC,aAAA,EAAC5E,WAAA,CAAA8F,YAAY;IACZd,SAAS,EAAC,6BAA6B;IACvCe,KAAK,EAAGV,kBAAoB;IAC5BW,YAAY,EAAG;MACdC,SAAS,EAAE,cAAc;MACzBjB,SAAS,EAAE;IACZ,CAAG;IACHrD,IAAI,EACH,IAAAgD,QAAA,CAAAC,aAAA,EAAAD,QAAA,CAAAO,QAAA,QACC,IAAAP,QAAA,CAAAC,aAAA,EAACrE,UAAA,CAAA4E,OAAS;MACTxD,IAAI,EAAGA,IAAM;MACbqD,SAAS,EAAC,qCAAqC;MAC/CI,UAAU;IAAA,CACV,CAAC,EACA,CAAE3B,UAAU,IAAIE,UAAU,KAC3B,IAAAgB,QAAA,CAAAC,aAAA;MAAMI,SAAS,EAAC;IAA0C,GACvD1B,UACG,CAEN,CACF;IACDuC,WAAW,EAAG;MACbK,WAAW,EAAEZ,wBAAwB;MACrC,GAAGO;IACJ,CAAG;IACHM,SAAS,EAAG;MAAEC,WAAW,EAAE;IAAO;EAAG,GAEnC,CAAE;IAAEC;EAAQ,CAAC,KACdV,YAAY,IACX,IAAAhB,QAAA,CAAAC,aAAA;IAAKI,SAAS,EAAC;EAAwC,GACpDN,wBAAwB,IACzB,IAAAC,QAAA,CAAAC,aAAA,EAACjE,2BAAA,CAAAwE,OAA0B;IAC1BpE,MAAM,EAAGA,MAAQ;IACjBa,QAAQ,EAAGA,QAAU;IACrB0E,QAAQ,EACP/B,iBAAiB,IACb;MACJD,kBAAkB,CACjBC,iBACD,CAAC;MACD8B,OAAO,CAAC,CAAC;IACV;EAAG,CACH,CACD,EACCX,kCAAkC,IACnC,IAAAf,QAAA,CAAAC,aAAA,EAACpE,yBAAA,CAAA2E,OAAwB;IACxBH,SAAS,EAAC,oDAAoD;IAC9DxD,4BAA4B,EAC3BA,4BACA;IACD+E,qCAAqC,EACpCnD,6BACA;IACDrC,MAAM,EAAGA,MAAQ;IACjBuF,QAAQ,EAAK7D,IAAI,IAAM;MACtBsB,gBAAgB,CAAEtB,IAAK,CAAC;MACxB4D,OAAO,CAAC,CAAC;IACV,CAAG;IACHG,iBAAiB,EAAK/D,IAAI,IAAM;MAC/ByB,yBAAyB,CACxBzB,IACD,CAAC;MACD4D,OAAO,CAAC,CAAC;IACV;EAAG,CACH,CACD,EACC3E,cAAc,IACf,IAAAiD,QAAA,CAAAC,aAAA,EAAClE,gBAAA,CAAAyE,OAAe;IACfsB,YAAY,EAAG1F,MAAM,CAAE,CAAC,CAAI;IAC5B2F,QAAQ,EAAGL;EAAS,CACpB,CAEE,CAGM,CAEH,CACA,CAAC;AAEjB,CAAC;AAACM,OAAA,CAAA9F,yBAAA,GAAAA,yBAAA;AAEK,MAAM+F,aAAa,GAAGA,CAAE;EAAE9F;AAAU,CAAC,KAAM;EACjD,MAAMC,MAAM,GAAG,IAAAc,eAAS,EACrBC,MAAM,IACPA,MAAM,CAAEV,YAAiB,CAAC,CAACyF,mBAAmB,CAAE/F,SAAU,CAAC,EAC5D,CAAEA,SAAS,CACZ,CAAC;EAED,IAAK,CAAEC,MAAM,CAAC6B,MAAM,IAAI7B,MAAM,CAAC+F,IAAI,CAAIC,KAAK,IAAM,CAAEA,KAAM,CAAC,EAAG;IAC7D,OAAO,IAAI;EACZ;EAEA,OACC,IAAApC,QAAA,CAAAC,aAAA,EAAC/D,yBAAyB;IAACC,SAAS,EAAGA,SAAW;IAACC,MAAM,EAAGA;EAAQ,CAAE,CAAC;AAEzE,CAAC;AAAC4F,OAAA,CAAAC,aAAA,GAAAA,aAAA;AAAA,IAAAI,QAAA,GAEaJ,aAAa;AAAAD,OAAA,CAAAxB,OAAA,GAAA6B,QAAA"}