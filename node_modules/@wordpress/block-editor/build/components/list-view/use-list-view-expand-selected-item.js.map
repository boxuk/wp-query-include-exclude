{"version":3,"names":["_element","require","_data","_store","useListViewExpandSelectedItem","firstSelectedBlockClientId","setExpandedState","selectedTreeId","setSelectedTreeId","useState","selectedBlockParentClientIds","useSelect","select","getBlockParents","blockEditorStore","parentClientIds","Array","isArray","length","useEffect","type","clientIds"],"sources":["@wordpress/block-editor/src/components/list-view/use-list-view-expand-selected-item.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEffect, useState } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\nexport default function useListViewExpandSelectedItem( {\n\tfirstSelectedBlockClientId,\n\tsetExpandedState,\n} ) {\n\tconst [ selectedTreeId, setSelectedTreeId ] = useState( null );\n\tconst { selectedBlockParentClientIds } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockParents } = select( blockEditorStore );\n\t\t\treturn {\n\t\t\t\tselectedBlockParentClientIds: getBlockParents(\n\t\t\t\t\tfirstSelectedBlockClientId,\n\t\t\t\t\tfalse\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ firstSelectedBlockClientId ]\n\t);\n\n\tconst parentClientIds =\n\t\tArray.isArray( selectedBlockParentClientIds ) &&\n\t\tselectedBlockParentClientIds.length\n\t\t\t? selectedBlockParentClientIds\n\t\t\t: null;\n\n\t// Expand tree when a block is selected.\n\tuseEffect( () => {\n\t\t// If the selectedTreeId is the same as the selected block,\n\t\t// it means that the block was selected using the block list tree.\n\t\tif ( selectedTreeId === firstSelectedBlockClientId ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the selected block has parents, get the top-level parent.\n\t\tif ( parentClientIds ) {\n\t\t\t// If the selected block has parents,\n\t\t\t// expand the tree branch.\n\t\t\tsetExpandedState( {\n\t\t\t\ttype: 'expand',\n\t\t\t\tclientIds: selectedBlockParentClientIds,\n\t\t\t} );\n\t\t}\n\t}, [ firstSelectedBlockClientId ] );\n\n\treturn {\n\t\tsetSelectedTreeId,\n\t};\n}\n"],"mappings":";;;;;;AAGA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AAKA,IAAAE,MAAA,GAAAF,OAAA;AATA;AACA;AACA;;AAIA;AACA;AACA;;AAGe,SAASG,6BAA6BA,CAAE;EACtDC,0BAA0B;EAC1BC;AACD,CAAC,EAAG;EACH,MAAM,CAAEC,cAAc,EAAEC,iBAAiB,CAAE,GAAG,IAAAC,iBAAQ,EAAE,IAAK,CAAC;EAC9D,MAAM;IAAEC;EAA6B,CAAC,GAAG,IAAAC,eAAS,EAC/CC,MAAM,IAAM;IACb,MAAM;MAAEC;IAAgB,CAAC,GAAGD,MAAM,CAAEE,YAAiB,CAAC;IACtD,OAAO;MACNJ,4BAA4B,EAAEG,eAAe,CAC5CR,0BAA0B,EAC1B,KACD;IACD,CAAC;EACF,CAAC,EACD,CAAEA,0BAA0B,CAC7B,CAAC;EAED,MAAMU,eAAe,GACpBC,KAAK,CAACC,OAAO,CAAEP,4BAA6B,CAAC,IAC7CA,4BAA4B,CAACQ,MAAM,GAChCR,4BAA4B,GAC5B,IAAI;;EAER;EACA,IAAAS,kBAAS,EAAE,MAAM;IAChB;IACA;IACA,IAAKZ,cAAc,KAAKF,0BAA0B,EAAG;MACpD;IACD;;IAEA;IACA,IAAKU,eAAe,EAAG;MACtB;MACA;MACAT,gBAAgB,CAAE;QACjBc,IAAI,EAAE,QAAQ;QACdC,SAAS,EAAEX;MACZ,CAAE,CAAC;IACJ;EACD,CAAC,EAAE,CAAEL,0BAA0B,CAAG,CAAC;EAEnC,OAAO;IACNG;EACD,CAAC;AACF"}