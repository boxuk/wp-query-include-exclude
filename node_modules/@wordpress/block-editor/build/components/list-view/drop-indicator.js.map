{"version":3,"names":["_element","require","_components","_dom","_i18n","ListViewDropIndicator","listViewRef","blockDropTarget","rootClientId","clientId","dropPosition","rootBlockElement","blockElement","useMemo","current","_rootBlockElement","querySelector","undefined","_blockElement","targetElement","rtl","isRTL","getDropIndicatorIndent","useCallback","targetElementRect","rootBlockIconElement","rootBlockIconRect","getBoundingClientRect","right","left","getDropIndicatorWidth","indent","width","offsetWidth","scrollContainer","getScrollContainer","ownerDocument","windowScroll","body","documentElement","scrollContainerRect","distanceBetweenContainerAndTarget","scrollContainerWidth","clientWidth","style","popoverAnchor","isValidDropPosition","contextElement","rect","top","bottom","doc","scrollbarWidth","height","window","DOMRect","createElement","Popover","animate","anchor","focusOnMount","className","variant"],"sources":["@wordpress/block-editor/src/components/list-view/drop-indicator.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Popover } from '@wordpress/components';\nimport { getScrollContainer } from '@wordpress/dom';\nimport { useCallback, useMemo } from '@wordpress/element';\nimport { isRTL } from '@wordpress/i18n';\n\nexport default function ListViewDropIndicator( {\n\tlistViewRef,\n\tblockDropTarget,\n} ) {\n\tconst { rootClientId, clientId, dropPosition } = blockDropTarget || {};\n\n\tconst [ rootBlockElement, blockElement ] = useMemo( () => {\n\t\tif ( ! listViewRef.current ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// The rootClientId will be defined whenever dropping into inner\n\t\t// block lists, but is undefined when dropping at the root level.\n\t\tconst _rootBlockElement = rootClientId\n\t\t\t? listViewRef.current.querySelector(\n\t\t\t\t\t`[data-block=\"${ rootClientId }\"]`\n\t\t\t  )\n\t\t\t: undefined;\n\n\t\t// The clientId represents the sibling block, the dragged block will\n\t\t// usually be inserted adjacent to it. It will be undefined when\n\t\t// dropping a block into an empty block list.\n\t\tconst _blockElement = clientId\n\t\t\t? listViewRef.current.querySelector(\n\t\t\t\t\t`[data-block=\"${ clientId }\"]`\n\t\t\t  )\n\t\t\t: undefined;\n\n\t\treturn [ _rootBlockElement, _blockElement ];\n\t}, [ rootClientId, clientId ] );\n\n\t// The targetElement is the element that the drop indicator will appear\n\t// before or after. When dropping into an empty block list, blockElement\n\t// is undefined, so the indicator will appear after the rootBlockElement.\n\tconst targetElement = blockElement || rootBlockElement;\n\n\tconst rtl = isRTL();\n\n\tconst getDropIndicatorIndent = useCallback(\n\t\t( targetElementRect ) => {\n\t\t\tif ( ! rootBlockElement ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t// Calculate the indent using the block icon of the root block.\n\t\t\t// Using a classname selector here might be flaky and could be\n\t\t\t// improved.\n\t\t\tconst rootBlockIconElement = rootBlockElement.querySelector(\n\t\t\t\t'.block-editor-block-icon'\n\t\t\t);\n\t\t\tconst rootBlockIconRect =\n\t\t\t\trootBlockIconElement.getBoundingClientRect();\n\t\t\treturn rtl\n\t\t\t\t? targetElementRect.right - rootBlockIconRect.left\n\t\t\t\t: rootBlockIconRect.right - targetElementRect.left;\n\t\t},\n\t\t[ rootBlockElement, rtl ]\n\t);\n\n\tconst getDropIndicatorWidth = useCallback(\n\t\t( targetElementRect, indent ) => {\n\t\t\tif ( ! targetElement ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t// Default to assuming that the width of the drop indicator\n\t\t\t// should be the same as the target element.\n\t\t\tlet width = targetElement.offsetWidth;\n\n\t\t\t// In deeply nested lists, where a scrollbar is present,\n\t\t\t// the width of the drop indicator should be the width of\n\t\t\t// the scroll container, minus the distance from the left\n\t\t\t// edge of the scroll container to the left edge of the\n\t\t\t// target element.\n\t\t\tconst scrollContainer = getScrollContainer(\n\t\t\t\ttargetElement,\n\t\t\t\t'horizontal'\n\t\t\t);\n\n\t\t\tconst ownerDocument = targetElement.ownerDocument;\n\t\t\tconst windowScroll =\n\t\t\t\tscrollContainer === ownerDocument.body ||\n\t\t\t\tscrollContainer === ownerDocument.documentElement;\n\n\t\t\tif ( scrollContainer && ! windowScroll ) {\n\t\t\t\tconst scrollContainerRect =\n\t\t\t\t\tscrollContainer.getBoundingClientRect();\n\n\t\t\t\tconst distanceBetweenContainerAndTarget = isRTL()\n\t\t\t\t\t? scrollContainerRect.right - targetElementRect.right\n\t\t\t\t\t: targetElementRect.left - scrollContainerRect.left;\n\n\t\t\t\tconst scrollContainerWidth = scrollContainer.clientWidth;\n\n\t\t\t\tif (\n\t\t\t\t\tscrollContainerWidth <\n\t\t\t\t\twidth + distanceBetweenContainerAndTarget\n\t\t\t\t) {\n\t\t\t\t\twidth =\n\t\t\t\t\t\tscrollContainerWidth -\n\t\t\t\t\t\tdistanceBetweenContainerAndTarget;\n\t\t\t\t}\n\n\t\t\t\t// LTR logic for ensuring the drop indicator does not extend\n\t\t\t\t// beyond the right edge of the scroll container.\n\t\t\t\tif (\n\t\t\t\t\t! rtl &&\n\t\t\t\t\ttargetElementRect.left + indent < scrollContainerRect.left\n\t\t\t\t) {\n\t\t\t\t\twidth -= scrollContainerRect.left - targetElementRect.left;\n\t\t\t\t\treturn width;\n\t\t\t\t}\n\n\t\t\t\t// RTL logic for ensuring the drop indicator does not extend\n\t\t\t\t// beyond the right edge of the scroll container.\n\t\t\t\tif (\n\t\t\t\t\trtl &&\n\t\t\t\t\ttargetElementRect.right - indent > scrollContainerRect.right\n\t\t\t\t) {\n\t\t\t\t\twidth -=\n\t\t\t\t\t\ttargetElementRect.right - scrollContainerRect.right;\n\t\t\t\t\treturn width;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Subtract the indent from the final width of the indicator.\n\t\t\treturn width - indent;\n\t\t},\n\t\t[ rtl, targetElement ]\n\t);\n\n\tconst style = useMemo( () => {\n\t\tif ( ! targetElement ) {\n\t\t\treturn {};\n\t\t}\n\n\t\tconst targetElementRect = targetElement.getBoundingClientRect();\n\t\tconst indent = getDropIndicatorIndent( targetElementRect );\n\n\t\treturn {\n\t\t\twidth: getDropIndicatorWidth( targetElementRect, indent ),\n\t\t};\n\t}, [ getDropIndicatorIndent, getDropIndicatorWidth, targetElement ] );\n\n\tconst popoverAnchor = useMemo( () => {\n\t\tconst isValidDropPosition =\n\t\t\tdropPosition === 'top' ||\n\t\t\tdropPosition === 'bottom' ||\n\t\t\tdropPosition === 'inside';\n\t\tif ( ! targetElement || ! isValidDropPosition ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tcontextElement: targetElement,\n\t\t\tgetBoundingClientRect() {\n\t\t\t\tconst rect = targetElement.getBoundingClientRect();\n\t\t\t\tconst indent = getDropIndicatorIndent( rect );\n\t\t\t\t// In RTL languages, the drop indicator should be positioned\n\t\t\t\t// to the left of the target element, with the width of the\n\t\t\t\t// indicator determining the indent at the right edge of the\n\t\t\t\t// target element. In LTR languages, the drop indicator should\n\t\t\t\t// end at the right edge of the target element, with the indent\n\t\t\t\t// added to the position of the left edge of the target element.\n\t\t\t\tlet left = rtl ? rect.left : rect.left + indent;\n\t\t\t\tlet top = 0;\n\t\t\t\tlet bottom = 0;\n\n\t\t\t\t// In deeply nested lists, where a scrollbar is present,\n\t\t\t\t// the width of the drop indicator should be the width of\n\t\t\t\t// the visible area of the scroll container. Additionally,\n\t\t\t\t// the left edge of the drop indicator line needs to be\n\t\t\t\t// offset by the distance the left edge of the target element\n\t\t\t\t// and the left edge of the scroll container. The ensures\n\t\t\t\t// that the drop indicator position never breaks out of the\n\t\t\t\t// visible area of the scroll container.\n\t\t\t\tconst scrollContainer = getScrollContainer(\n\t\t\t\t\ttargetElement,\n\t\t\t\t\t'horizontal'\n\t\t\t\t);\n\n\t\t\t\tconst doc = targetElement.ownerDocument;\n\t\t\t\tconst windowScroll =\n\t\t\t\t\tscrollContainer === doc.body ||\n\t\t\t\t\tscrollContainer === doc.documentElement;\n\n\t\t\t\t// If the scroll container is not the window, offset the left position, if need be.\n\t\t\t\tif ( scrollContainer && ! windowScroll ) {\n\t\t\t\t\tconst scrollContainerRect =\n\t\t\t\t\t\tscrollContainer.getBoundingClientRect();\n\n\t\t\t\t\t// In RTL languages, a vertical scrollbar is present on the\n\t\t\t\t\t// left edge of the scroll container. The width of the\n\t\t\t\t\t// scrollbar needs to be accounted for when positioning the\n\t\t\t\t\t// drop indicator.\n\t\t\t\t\tconst scrollbarWidth = rtl\n\t\t\t\t\t\t? scrollContainer.offsetWidth -\n\t\t\t\t\t\t  scrollContainer.clientWidth\n\t\t\t\t\t\t: 0;\n\n\t\t\t\t\tif ( left < scrollContainerRect.left + scrollbarWidth ) {\n\t\t\t\t\t\tleft = scrollContainerRect.left + scrollbarWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( dropPosition === 'top' ) {\n\t\t\t\t\ttop = rect.top;\n\t\t\t\t\tbottom = rect.top;\n\t\t\t\t} else {\n\t\t\t\t\t// `dropPosition` is either `bottom` or `inside`\n\t\t\t\t\ttop = rect.bottom;\n\t\t\t\t\tbottom = rect.bottom;\n\t\t\t\t}\n\n\t\t\t\tconst width = getDropIndicatorWidth( rect, indent );\n\t\t\t\tconst height = bottom - top;\n\n\t\t\t\treturn new window.DOMRect( left, top, width, height );\n\t\t\t},\n\t\t};\n\t}, [\n\t\ttargetElement,\n\t\tdropPosition,\n\t\tgetDropIndicatorIndent,\n\t\tgetDropIndicatorWidth,\n\t\trtl,\n\t] );\n\n\tif ( ! targetElement ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Popover\n\t\t\tanimate={ false }\n\t\t\tanchor={ popoverAnchor }\n\t\t\tfocusOnMount={ false }\n\t\t\tclassName=\"block-editor-list-view-drop-indicator\"\n\t\t\tvariant=\"unstyled\"\n\t\t>\n\t\t\t<div\n\t\t\t\tstyle={ style }\n\t\t\t\tclassName=\"block-editor-list-view-drop-indicator__line\"\n\t\t\t/>\n\t\t</Popover>\n\t);\n}\n"],"mappings":"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"}