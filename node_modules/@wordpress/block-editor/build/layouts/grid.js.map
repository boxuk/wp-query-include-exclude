{"version":3,"names":["_i18n","require","_components","_utils","_gap","_utils2","_definitions","RANGE_CONTROL_MAX_VALUES","px","vw","vh","em","rem","_default","name","label","__","inspectorControls","GridLayoutInspectorControls","layout","onChange","columnCount","_element","createElement","GridLayoutColumnsControl","GridLayoutMinimumWidthControl","toolBarControls","DefaultLayoutToolbarControls","getLayoutStyle","selector","style","blockName","hasBlockGapSupport","layoutDefinitions","LAYOUT_DEFINITIONS","minimumColumnWidth","blockGapValue","spacing","blockGap","shouldSkipSerialization","getGapCSSValue","undefined","output","rules","push","length","appendSelectors","join","getBlockGapCSS","getOrientation","getAlignments","exports","default","value","quantity","unit","parseQuantityAndUnitFromRawValue","handleSliderChange","next","handleUnitChange","newUnit","newValue","includes","toFixed","Math","round","BaseControl","VisualLabel","as","Flex","gap","FlexItem","isBlock","__experimentalUnitControl","size","onUnitChange","min","RangeControl","max","withInputField"],"sources":["@wordpress/block-editor/src/layouts/grid.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nimport {\n\tBaseControl,\n\tFlex,\n\tFlexItem,\n\tRangeControl,\n\t__experimentalUnitControl as UnitControl,\n\t__experimentalParseQuantityAndUnitFromRawValue as parseQuantityAndUnitFromRawValue,\n} from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { appendSelectors, getBlockGapCSS } from './utils';\nimport { getGapCSSValue } from '../hooks/gap';\nimport { shouldSkipSerialization } from '../hooks/utils';\nimport { LAYOUT_DEFINITIONS } from './definitions';\n\nconst RANGE_CONTROL_MAX_VALUES = {\n\tpx: 600,\n\t'%': 100,\n\tvw: 100,\n\tvh: 100,\n\tem: 38,\n\trem: 38,\n};\n\nexport default {\n\tname: 'grid',\n\tlabel: __( 'Grid' ),\n\tinspectorControls: function GridLayoutInspectorControls( {\n\t\tlayout = {},\n\t\tonChange,\n\t} ) {\n\t\treturn layout?.columnCount ? (\n\t\t\t<GridLayoutColumnsControl layout={ layout } onChange={ onChange } />\n\t\t) : (\n\t\t\t<GridLayoutMinimumWidthControl\n\t\t\t\tlayout={ layout }\n\t\t\t\tonChange={ onChange }\n\t\t\t/>\n\t\t);\n\t},\n\ttoolBarControls: function DefaultLayoutToolbarControls() {\n\t\treturn null;\n\t},\n\tgetLayoutStyle: function getLayoutStyle( {\n\t\tselector,\n\t\tlayout,\n\t\tstyle,\n\t\tblockName,\n\t\thasBlockGapSupport,\n\t\tlayoutDefinitions = LAYOUT_DEFINITIONS,\n\t} ) {\n\t\tconst { minimumColumnWidth = '12rem', columnCount = null } = layout;\n\n\t\t// If a block's block.json skips serialization for spacing or spacing.blockGap,\n\t\t// don't apply the user-defined value to the styles.\n\t\tconst blockGapValue =\n\t\t\tstyle?.spacing?.blockGap &&\n\t\t\t! shouldSkipSerialization( blockName, 'spacing', 'blockGap' )\n\t\t\t\t? getGapCSSValue( style?.spacing?.blockGap, '0.5em' )\n\t\t\t\t: undefined;\n\n\t\tlet output = '';\n\t\tconst rules = [];\n\n\t\tif ( columnCount ) {\n\t\t\trules.push(\n\t\t\t\t`grid-template-columns: repeat(${ columnCount }, minmax(0, 1fr))`\n\t\t\t);\n\t\t} else if ( minimumColumnWidth ) {\n\t\t\trules.push(\n\t\t\t\t`grid-template-columns: repeat(auto-fill, minmax(min(${ minimumColumnWidth }, 100%), 1fr))`\n\t\t\t);\n\t\t}\n\n\t\tif ( rules.length ) {\n\t\t\t// Reason to disable: the extra line breaks added by prettier mess with the unit tests.\n\t\t\t// eslint-disable-next-line prettier/prettier\n\t\t\toutput = `${ appendSelectors( selector ) } { ${ rules.join(\n\t\t\t\t'; '\n\t\t\t) }; }`;\n\t\t}\n\n\t\t// Output blockGap styles based on rules contained in layout definitions in theme.json.\n\t\tif ( hasBlockGapSupport && blockGapValue ) {\n\t\t\toutput += getBlockGapCSS(\n\t\t\t\tselector,\n\t\t\t\tlayoutDefinitions,\n\t\t\t\t'grid',\n\t\t\t\tblockGapValue\n\t\t\t);\n\t\t}\n\t\treturn output;\n\t},\n\tgetOrientation() {\n\t\treturn 'horizontal';\n\t},\n\tgetAlignments() {\n\t\treturn [];\n\t},\n};\n\n// Enables setting minimum width of grid items.\nfunction GridLayoutMinimumWidthControl( { layout, onChange } ) {\n\tconst { minimumColumnWidth: value = '12rem' } = layout;\n\tconst [ quantity, unit ] = parseQuantityAndUnitFromRawValue( value );\n\n\tconst handleSliderChange = ( next ) => {\n\t\tonChange( {\n\t\t\t...layout,\n\t\t\tminimumColumnWidth: [ next, unit ].join( '' ),\n\t\t} );\n\t};\n\n\t// Mostly copied from HeightControl.\n\tconst handleUnitChange = ( newUnit ) => {\n\t\t// Attempt to smooth over differences between currentUnit and newUnit.\n\t\t// This should slightly improve the experience of switching between unit types.\n\t\tlet newValue;\n\n\t\tif ( [ 'em', 'rem' ].includes( newUnit ) && unit === 'px' ) {\n\t\t\t// Convert pixel value to an approximate of the new unit, assuming a root size of 16px.\n\t\t\tnewValue = ( quantity / 16 ).toFixed( 2 ) + newUnit;\n\t\t} else if ( [ 'em', 'rem' ].includes( unit ) && newUnit === 'px' ) {\n\t\t\t// Convert to pixel value assuming a root size of 16px.\n\t\t\tnewValue = Math.round( quantity * 16 ) + newUnit;\n\t\t} else if (\n\t\t\t[ 'vh', 'vw', '%' ].includes( newUnit ) &&\n\t\t\tquantity > 100\n\t\t) {\n\t\t\t// When converting to `vh`, `vw`, or `%` units, cap the new value at 100.\n\t\t\tnewValue = 100 + newUnit;\n\t\t}\n\n\t\tonChange( {\n\t\t\t...layout,\n\t\t\tminimumColumnWidth: newValue,\n\t\t} );\n\t};\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<BaseControl.VisualLabel as=\"legend\">\n\t\t\t\t{ __( 'Minimum column width' ) }\n\t\t\t</BaseControl.VisualLabel>\n\t\t\t<Flex gap={ 4 }>\n\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t<UnitControl\n\t\t\t\t\t\tsize={ '__unstable-large' }\n\t\t\t\t\t\tonChange={ ( newValue ) => {\n\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\tminimumColumnWidth: newValue,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonUnitChange={ handleUnitChange }\n\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t/>\n\t\t\t\t</FlexItem>\n\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\tonChange={ handleSliderChange }\n\t\t\t\t\t\tvalue={ quantity }\n\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\tmax={ RANGE_CONTROL_MAX_VALUES[ unit ] || 600 }\n\t\t\t\t\t\twithInputField={ false }\n\t\t\t\t\t/>\n\t\t\t\t</FlexItem>\n\t\t\t</Flex>\n\t\t</fieldset>\n\t);\n}\n\n// Enables setting number of grid columns\nfunction GridLayoutColumnsControl( { layout, onChange } ) {\n\tconst { columnCount = 3 } = layout;\n\n\treturn (\n\t\t<RangeControl\n\t\t\tlabel={ __( 'Columns' ) }\n\t\t\tvalue={ columnCount }\n\t\t\tonChange={ ( value ) =>\n\t\t\t\tonChange( {\n\t\t\t\t\t...layout,\n\t\t\t\t\tcolumnCount: value,\n\t\t\t\t} )\n\t\t\t}\n\t\t\tmin={ 1 }\n\t\t\tmax={ 6 }\n\t\t/>\n\t);\n}\n"],"mappings":"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"}