{"version":3,"names":["_components","require","_i18n","_icons","_styleEngine","_useSetting","_interopRequireDefault","_utils","_gap","_utils2","_definitions","_default","name","label","__","inspectorControls","DefaultLayoutInspectorControls","layout","onChange","layoutBlockSupport","wideSize","contentSize","justifyContent","allowJustification","onJustificationChange","value","justificationOptions","icon","justifyLeft","justifyCenter","justifyRight","units","useCustomUnits","availableUnits","useSetting","_element","createElement","Fragment","className","__experimentalUnitControl","labelPosition","__unstableInputWidth","nextWidth","parseFloat","Icon","positionCenter","stretchWide","__experimentalToggleGroupControl","__nextHasNoMarginBottom","map","__experimentalToggleGroupControlOptionIcon","key","toolBarControls","DefaultLayoutToolbarControls","getLayoutStyle","selector","style","blockName","hasBlockGapSupport","layoutDefinitions","LAYOUT_DEFINITIONS","blockGapStyleValue","getGapCSSValue","spacing","blockGap","blockGapValue","shouldSkipSerialization","top","marginLeft","marginRight","output","appendSelectors","padding","paddingValues","getCSSRules","forEach","rule","getBlockGapCSS","getOrientation","getAlignments","alignmentInfo","getAlignmentsInfo","alignments","undefined","includes","unshift","alignment","info","wide","none","exports","default"],"sources":["@wordpress/block-editor/src/layouts/constrained.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\t__experimentalUseCustomUnits as useCustomUnits,\n\t__experimentalUnitControl as UnitControl,\n\t__experimentalToggleGroupControl as ToggleGroupControl,\n\t__experimentalToggleGroupControlOptionIcon as ToggleGroupControlOptionIcon,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tIcon,\n\tpositionCenter,\n\tstretchWide,\n\tjustifyLeft,\n\tjustifyCenter,\n\tjustifyRight,\n} from '@wordpress/icons';\nimport { getCSSRules } from '@wordpress/style-engine';\n\n/**\n * Internal dependencies\n */\nimport useSetting from '../components/use-setting';\nimport { appendSelectors, getBlockGapCSS, getAlignmentsInfo } from './utils';\nimport { getGapCSSValue } from '../hooks/gap';\nimport { shouldSkipSerialization } from '../hooks/utils';\nimport { LAYOUT_DEFINITIONS } from './definitions';\n\nexport default {\n\tname: 'constrained',\n\tlabel: __( 'Constrained' ),\n\tinspectorControls: function DefaultLayoutInspectorControls( {\n\t\tlayout,\n\t\tonChange,\n\t\tlayoutBlockSupport = {},\n\t} ) {\n\t\tconst { wideSize, contentSize, justifyContent = 'center' } = layout;\n\t\tconst { allowJustification = true } = layoutBlockSupport;\n\t\tconst onJustificationChange = ( value ) => {\n\t\t\tonChange( {\n\t\t\t\t...layout,\n\t\t\t\tjustifyContent: value,\n\t\t\t} );\n\t\t};\n\t\tconst justificationOptions = [\n\t\t\t{\n\t\t\t\tvalue: 'left',\n\t\t\t\ticon: justifyLeft,\n\t\t\t\tlabel: __( 'Justify items left' ),\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'center',\n\t\t\t\ticon: justifyCenter,\n\t\t\t\tlabel: __( 'Justify items center' ),\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'right',\n\t\t\t\ticon: justifyRight,\n\t\t\t\tlabel: __( 'Justify items right' ),\n\t\t\t},\n\t\t];\n\t\tconst units = useCustomUnits( {\n\t\t\tavailableUnits: useSetting( 'spacing.units' ) || [\n\t\t\t\t'%',\n\t\t\t\t'px',\n\t\t\t\t'em',\n\t\t\t\t'rem',\n\t\t\t\t'vw',\n\t\t\t],\n\t\t} );\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"block-editor-hooks__layout-controls\">\n\t\t\t\t\t<div className=\"block-editor-hooks__layout-controls-unit\">\n\t\t\t\t\t\t<UnitControl\n\t\t\t\t\t\t\tclassName=\"block-editor-hooks__layout-controls-unit-input\"\n\t\t\t\t\t\t\tlabel={ __( 'Content' ) }\n\t\t\t\t\t\t\tlabelPosition=\"top\"\n\t\t\t\t\t\t\t__unstableInputWidth=\"80px\"\n\t\t\t\t\t\t\tvalue={ contentSize || wideSize || '' }\n\t\t\t\t\t\t\tonChange={ ( nextWidth ) => {\n\t\t\t\t\t\t\t\tnextWidth =\n\t\t\t\t\t\t\t\t\t0 > parseFloat( nextWidth )\n\t\t\t\t\t\t\t\t\t\t? '0'\n\t\t\t\t\t\t\t\t\t\t: nextWidth;\n\t\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\t\tcontentSize: nextWidth,\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tunits={ units }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Icon icon={ positionCenter } />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"block-editor-hooks__layout-controls-unit\">\n\t\t\t\t\t\t<UnitControl\n\t\t\t\t\t\t\tclassName=\"block-editor-hooks__layout-controls-unit-input\"\n\t\t\t\t\t\t\tlabel={ __( 'Wide' ) }\n\t\t\t\t\t\t\tlabelPosition=\"top\"\n\t\t\t\t\t\t\t__unstableInputWidth=\"80px\"\n\t\t\t\t\t\t\tvalue={ wideSize || contentSize || '' }\n\t\t\t\t\t\t\tonChange={ ( nextWidth ) => {\n\t\t\t\t\t\t\t\tnextWidth =\n\t\t\t\t\t\t\t\t\t0 > parseFloat( nextWidth )\n\t\t\t\t\t\t\t\t\t\t? '0'\n\t\t\t\t\t\t\t\t\t\t: nextWidth;\n\t\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\t\twideSize: nextWidth,\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tunits={ units }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Icon icon={ stretchWide } />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<p className=\"block-editor-hooks__layout-controls-helptext\">\n\t\t\t\t\t{ __(\n\t\t\t\t\t\t'Customize the width for all elements that are assigned to the center or wide columns.'\n\t\t\t\t\t) }\n\t\t\t\t</p>\n\t\t\t\t{ allowJustification && (\n\t\t\t\t\t<ToggleGroupControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ __( 'Justification' ) }\n\t\t\t\t\t\tvalue={ justifyContent }\n\t\t\t\t\t\tonChange={ onJustificationChange }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ justificationOptions.map(\n\t\t\t\t\t\t\t( { value, icon, label } ) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<ToggleGroupControlOptionIcon\n\t\t\t\t\t\t\t\t\t\tkey={ value }\n\t\t\t\t\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\t\t\t\t\tlabel={ label }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t) }\n\t\t\t\t\t</ToggleGroupControl>\n\t\t\t\t) }\n\t\t\t</>\n\t\t);\n\t},\n\ttoolBarControls: function DefaultLayoutToolbarControls() {\n\t\treturn null;\n\t},\n\tgetLayoutStyle: function getLayoutStyle( {\n\t\tselector,\n\t\tlayout = {},\n\t\tstyle,\n\t\tblockName,\n\t\thasBlockGapSupport,\n\t\tlayoutDefinitions = LAYOUT_DEFINITIONS,\n\t} ) {\n\t\tconst { contentSize, wideSize, justifyContent } = layout;\n\t\tconst blockGapStyleValue = getGapCSSValue( style?.spacing?.blockGap );\n\n\t\t// If a block's block.json skips serialization for spacing or\n\t\t// spacing.blockGap, don't apply the user-defined value to the styles.\n\t\tlet blockGapValue = '';\n\t\tif ( ! shouldSkipSerialization( blockName, 'spacing', 'blockGap' ) ) {\n\t\t\t// If an object is provided only use the 'top' value for this kind of gap.\n\t\t\tif ( blockGapStyleValue?.top ) {\n\t\t\t\tblockGapValue = getGapCSSValue( blockGapStyleValue?.top );\n\t\t\t} else if ( typeof blockGapStyleValue === 'string' ) {\n\t\t\t\tblockGapValue = getGapCSSValue( blockGapStyleValue );\n\t\t\t}\n\t\t}\n\n\t\tconst marginLeft =\n\t\t\tjustifyContent === 'left' ? '0 !important' : 'auto !important';\n\t\tconst marginRight =\n\t\t\tjustifyContent === 'right' ? '0 !important' : 'auto !important';\n\n\t\tlet output =\n\t\t\t!! contentSize || !! wideSize\n\t\t\t\t? `\n\t\t\t\t\t${ appendSelectors(\n\t\t\t\t\t\tselector,\n\t\t\t\t\t\t'> :where(:not(.alignleft):not(.alignright):not(.alignfull))'\n\t\t\t\t\t) } {\n\t\t\t\t\t\tmax-width: ${ contentSize ?? wideSize };\n\t\t\t\t\t\tmargin-left: ${ marginLeft };\n\t\t\t\t\t\tmargin-right: ${ marginRight };\n\t\t\t\t\t}\n\t\t\t\t\t${ appendSelectors( selector, '> .alignwide' ) }  {\n\t\t\t\t\t\tmax-width: ${ wideSize ?? contentSize };\n\t\t\t\t\t}\n\t\t\t\t\t${ appendSelectors( selector, '> .alignfull' ) } {\n\t\t\t\t\t\tmax-width: none;\n\t\t\t\t\t}\n\t\t\t\t`\n\t\t\t\t: '';\n\n\t\tif ( justifyContent === 'left' ) {\n\t\t\toutput += `${ appendSelectors(\n\t\t\t\tselector,\n\t\t\t\t'> :where(:not(.alignleft):not(.alignright):not(.alignfull))'\n\t\t\t) }\n\t\t\t{ margin-left: ${ marginLeft }; }`;\n\t\t} else if ( justifyContent === 'right' ) {\n\t\t\toutput += `${ appendSelectors(\n\t\t\t\tselector,\n\t\t\t\t'> :where(:not(.alignleft):not(.alignright):not(.alignfull))'\n\t\t\t) }\n\t\t\t{ margin-right: ${ marginRight }; }`;\n\t\t}\n\n\t\t// If there is custom padding, add negative margins for alignfull blocks.\n\t\tif ( style?.spacing?.padding ) {\n\t\t\t// The style object might be storing a preset so we need to make sure we get a usable value.\n\t\t\tconst paddingValues = getCSSRules( style );\n\t\t\tpaddingValues.forEach( ( rule ) => {\n\t\t\t\tif ( rule.key === 'paddingRight' ) {\n\t\t\t\t\toutput += `\n\t\t\t\t\t${ appendSelectors( selector, '> .alignfull' ) } {\n\t\t\t\t\t\tmargin-right: calc(${ rule.value } * -1);\n\t\t\t\t\t}\n\t\t\t\t\t`;\n\t\t\t\t} else if ( rule.key === 'paddingLeft' ) {\n\t\t\t\t\toutput += `\n\t\t\t\t\t${ appendSelectors( selector, '> .alignfull' ) } {\n\t\t\t\t\t\tmargin-left: calc(${ rule.value } * -1);\n\t\t\t\t\t}\n\t\t\t\t\t`;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Output blockGap styles based on rules contained in layout definitions in theme.json.\n\t\tif ( hasBlockGapSupport && blockGapValue ) {\n\t\t\toutput += getBlockGapCSS(\n\t\t\t\tselector,\n\t\t\t\tlayoutDefinitions,\n\t\t\t\t'constrained',\n\t\t\t\tblockGapValue\n\t\t\t);\n\t\t}\n\t\treturn output;\n\t},\n\tgetOrientation() {\n\t\treturn 'vertical';\n\t},\n\tgetAlignments( layout ) {\n\t\tconst alignmentInfo = getAlignmentsInfo( layout );\n\t\tif ( layout.alignments !== undefined ) {\n\t\t\tif ( ! layout.alignments.includes( 'none' ) ) {\n\t\t\t\tlayout.alignments.unshift( 'none' );\n\t\t\t}\n\t\t\treturn layout.alignments.map( ( alignment ) => ( {\n\t\t\t\tname: alignment,\n\t\t\t\tinfo: alignmentInfo[ alignment ],\n\t\t\t} ) );\n\t\t}\n\t\tconst { contentSize, wideSize } = layout;\n\n\t\tconst alignments = [\n\t\t\t{ name: 'left' },\n\t\t\t{ name: 'center' },\n\t\t\t{ name: 'right' },\n\t\t];\n\n\t\tif ( contentSize ) {\n\t\t\talignments.unshift( { name: 'full' } );\n\t\t}\n\n\t\tif ( wideSize ) {\n\t\t\talignments.unshift( { name: 'wide', info: alignmentInfo.wide } );\n\t\t}\n\n\t\talignments.unshift( { name: 'none', info: alignmentInfo.none } );\n\n\t\treturn alignments;\n\t},\n};\n"],"mappings":"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"}