{"version":3,"names":["_yWebrtc","require","connectWebRTC","objectId","objectType","doc","docName","WebrtcProvider","password","window","__experimentalCollaborativeEditingSecret","Promise","resolve"],"sources":["@wordpress/sync/src/connect-webrtc.js"],"sourcesContent":["/**\n * External dependencies\n */\n// @ts-ignore\nimport { WebrtcProvider } from 'y-webrtc';\n\n/** @typedef {import('./types').ObjectType} ObjectType */\n/** @typedef {import('./types').ObjectID} ObjectID */\n/** @typedef {import('./types').CRDTDoc} CRDTDoc */\n\n/**\n * Connect function to the WebRTC provider.\n *\n * @param {ObjectID}   objectId   The object ID.\n * @param {ObjectType} objectType The object type.\n * @param {CRDTDoc}    doc        The CRDT document.\n *\n * @return {Promise<() => void>} Promise that resolves when the connection is established.\n */\nexport function connectWebRTC( objectId, objectType, doc ) {\n\tconst docName = `${ objectType }-${ objectId }`;\n\tnew WebrtcProvider( docName, doc, {\n\t\t// @ts-ignore\n\t\tpassword: window.__experimentalCollaborativeEditingSecret,\n\t} );\n\n\treturn Promise.resolve( () => true );\n}\n"],"mappings":";;;;;;AAIA,IAAAA,QAAA,GAAAC,OAAA;AAJA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,aAAaA,CAAEC,QAAQ,EAAEC,UAAU,EAAEC,GAAG,EAAG;EAC1D,MAAMC,OAAO,GAAI,GAAGF,UAAY,IAAID,QAAU,EAAC;EAC/C,IAAII,uBAAc,CAAED,OAAO,EAAED,GAAG,EAAE;IACjC;IACAG,QAAQ,EAAEC,MAAM,CAACC;EAClB,CAAE,CAAC;EAEH,OAAOC,OAAO,CAACC,OAAO,CAAE,MAAM,IAAK,CAAC;AACrC"}